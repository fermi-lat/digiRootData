//
// File generated by C:\heather\extlib\Root\v3\bin\rootcint at Wed Jun 27 11:01:20 2001.
// Do NOT change. Changes will be lost next time file is generated
//
#include "EventCint.h"

#include "TClass.h"
#include "TBuffer.h"
#include "TMemberInspector.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

//______________________________________________________________________________
TBuffer &operator>>(TBuffer &buf, SubSystemHeader *&obj)
{
   // Read a pointer to an object of class SubSystemHeader.

   obj = (SubSystemHeader *) buf.ReadObject(SubSystemHeader::Class());
   return buf;
}

//______________________________________________________________________________
TBuffer &operator>>(TBuffer &buf, AcdHeader *&obj)
{
   // Read a pointer to an object of class AcdHeader.

   obj = (AcdHeader *) buf.ReadObject(AcdHeader::Class());
   return buf;
}

//______________________________________________________________________________
TBuffer &operator>>(TBuffer &buf, AcdId *&obj)
{
   // Read a pointer to an object of class AcdId.

   obj = (AcdId *) buf.ReadObject(AcdId::Class());
   return buf;
}

//______________________________________________________________________________
TBuffer &operator>>(TBuffer &buf, AcdTile *&obj)
{
   // Read a pointer to an object of class AcdTile.

   obj = (AcdTile *) buf.ReadObject(AcdTile::Class());
   return buf;
}

//______________________________________________________________________________
TBuffer &operator>>(TBuffer &buf, CalHeader *&obj)
{
   // Read a pointer to an object of class CalHeader.

   obj = (CalHeader *) buf.ReadObject(CalHeader::Class());
   return buf;
}

//______________________________________________________________________________
TBuffer &operator>>(TBuffer &buf, CalLogId *&obj)
{
   // Read a pointer to an object of class CalLogId.

   obj = (CalLogId *) buf.ReadObject(CalLogId::Class());
   return buf;
}

//______________________________________________________________________________
TBuffer &operator>>(TBuffer &buf, CalLog *&obj)
{
   // Read a pointer to an object of class CalLog.

   obj = (CalLog *) buf.ReadObject(CalLog::Class());
   return buf;
}

//______________________________________________________________________________
TBuffer &operator>>(TBuffer &buf, ESAPID *&obj)
{
   // Read a pointer to an object of class ESAPID.

   obj = (ESAPID *) buf.ReadObject(ESAPID::Class());
   return buf;
}

//______________________________________________________________________________
TBuffer &operator>>(TBuffer &buf, L1T *&obj)
{
   // Read a pointer to an object of class L1T.

   obj = (L1T *) buf.ReadObject(L1T::Class());
   return buf;
}

//______________________________________________________________________________
TBuffer &operator>>(TBuffer &buf, TkrHeader *&obj)
{
   // Read a pointer to an object of class TkrHeader.

   obj = (TkrHeader *) buf.ReadObject(TkrHeader::Class());
   return buf;
}

//______________________________________________________________________________
TBuffer &operator>>(TBuffer &buf, StripId *&obj)
{
   // Read a pointer to an object of class StripId.

   obj = (StripId *) buf.ReadObject(StripId::Class());
   return buf;
}

//______________________________________________________________________________
TBuffer &operator>>(TBuffer &buf, TkrLayer *&obj)
{
   // Read a pointer to an object of class TkrLayer.

   obj = (TkrLayer *) buf.ReadObject(TkrLayer::Class());
   return buf;
}

//______________________________________________________________________________
TBuffer &operator>>(TBuffer &buf, Event *&obj)
{
   // Read a pointer to an object of class Event.

   obj = (Event *) buf.ReadObject(Event::Class());
   return buf;
}

//______________________________________________________________________________
TBuffer &operator>>(TBuffer &buf, Tagger *&obj)
{
   // Read a pointer to an object of class Tagger.

   obj = (Tagger *) buf.ReadObject(Tagger::Class());
   return buf;
}

//______________________________________________________________________________
void AcdTile::Streamer(TBuffer &R__b)
{
   // Stream an object of class AcdTile.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      TObject::Streamer(R__b);
      R__b >> m_tag;
      m_tileId.Streamer(R__b);
      R__b.CheckByteCount(R__s, R__c, AcdTile::IsA());
   } else {
      R__c = R__b.WriteVersion(AcdTile::IsA(), kTRUE);
      TObject::Streamer(R__b);
      R__b << m_tag;
      m_tileId.Streamer(R__b);
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void AcdTile::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
   // Inspect the data members of an object of class AcdTile.

   TClass *R__cl  = AcdTile::IsA();
   Int_t   R__ncp = strlen(R__parent);
   if (R__ncp || R__cl || R__insp.IsA()) { }
   R__insp.Inspect(R__cl, R__parent, "m_tag", &m_tag);
   R__insp.Inspect(R__cl, R__parent, "m_tileId", &m_tileId);
   m_tileId.ShowMembers(R__insp, strcat(R__parent,"m_tileId.")); R__parent[R__ncp] = 0;
   TObject::ShowMembers(R__insp, R__parent);
}

//______________________________________________________________________________
const char *AcdTile::Class_Name()
{
   // Return the class name for AcdTile.
   return "AcdTile";
}

// Static variable to hold initialization object
static AcdTile::R__Init __gR__InitAcdTile(0);

//______________________________________________________________________________
void CalLog::Streamer(TBuffer &R__b)
{
   // Stream an object of class CalLog.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      TObject::Streamer(R__b);
      m_log.Streamer(R__b);
      R__b.ReadStaticArray(m_AdcValues);
      R__b.CheckByteCount(R__s, R__c, CalLog::IsA());
   } else {
      R__c = R__b.WriteVersion(CalLog::IsA(), kTRUE);
      TObject::Streamer(R__b);
      m_log.Streamer(R__b);
      R__b.WriteArray(m_AdcValues, 8);
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void CalLog::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
   // Inspect the data members of an object of class CalLog.

   TClass *R__cl  = CalLog::IsA();
   Int_t   R__ncp = strlen(R__parent);
   if (R__ncp || R__cl || R__insp.IsA()) { }
   R__insp.Inspect(R__cl, R__parent, "m_log", &m_log);
   m_log.ShowMembers(R__insp, strcat(R__parent,"m_log.")); R__parent[R__ncp] = 0;
   R__insp.Inspect(R__cl, R__parent, "m_AdcValues[8]", m_AdcValues);
   TObject::ShowMembers(R__insp, R__parent);
}

//______________________________________________________________________________
const char *CalLog::Class_Name()
{
   // Return the class name for CalLog.
   return "CalLog";
}

// Static variable to hold initialization object
static CalLog::R__Init __gR__InitCalLog(0);

//______________________________________________________________________________
void ESAPID::Streamer(TBuffer &R__b)
{
   // Stream an object of class ESAPID.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      TObject::Streamer(R__b);
      R__b >> m_Clean;
      R__b >> m_XBeam;
      R__b >> m_YBeam;
      R__b >> m_NPart;
      R__b.ReadStaticArray(m_ID);
      R__b.ReadStaticArray(m_Mom);
      R__b.ReadStaticArray(m_BeamPb);
      R__b >> m_CADC;
      R__b.ReadStaticArray(m_TOF);
      R__b >> m_TOFC;
      R__b >> m_OneGoodP;
      R__b >> m_OneGoodG;
      R__b >> m_OneGoodE;
      R__b >> m_OneGoodK;
      R__b >> m_OneGoodPi;
      R__b >> m_OneGoodH;
      R__b.CheckByteCount(R__s, R__c, ESAPID::IsA());
   } else {
      R__c = R__b.WriteVersion(ESAPID::IsA(), kTRUE);
      TObject::Streamer(R__b);
      R__b << m_Clean;
      R__b << m_XBeam;
      R__b << m_YBeam;
      R__b << m_NPart;
      R__b.WriteArray(m_ID, 10);
      R__b.WriteArray(m_Mom, 10);
      R__b.WriteArray(m_BeamPb, 5);
      R__b << m_CADC;
      R__b.WriteArray(m_TOF, 4);
      R__b << m_TOFC;
      R__b << m_OneGoodP;
      R__b << m_OneGoodG;
      R__b << m_OneGoodE;
      R__b << m_OneGoodK;
      R__b << m_OneGoodPi;
      R__b << m_OneGoodH;
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void ESAPID::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
   // Inspect the data members of an object of class ESAPID.

   TClass *R__cl  = ESAPID::IsA();
   Int_t   R__ncp = strlen(R__parent);
   if (R__ncp || R__cl || R__insp.IsA()) { }
   R__insp.Inspect(R__cl, R__parent, "m_Clean", &m_Clean);
   R__insp.Inspect(R__cl, R__parent, "m_XBeam", &m_XBeam);
   R__insp.Inspect(R__cl, R__parent, "m_YBeam", &m_YBeam);
   R__insp.Inspect(R__cl, R__parent, "m_NPart", &m_NPart);
   R__insp.Inspect(R__cl, R__parent, "m_ID[10]", m_ID);
   R__insp.Inspect(R__cl, R__parent, "m_Mom[10]", m_Mom);
   R__insp.Inspect(R__cl, R__parent, "m_BeamPb[5]", m_BeamPb);
   R__insp.Inspect(R__cl, R__parent, "m_CADC", &m_CADC);
   R__insp.Inspect(R__cl, R__parent, "m_TOF[4]", m_TOF);
   R__insp.Inspect(R__cl, R__parent, "m_TOFC", &m_TOFC);
   R__insp.Inspect(R__cl, R__parent, "m_OneGoodP", &m_OneGoodP);
   R__insp.Inspect(R__cl, R__parent, "m_OneGoodG", &m_OneGoodG);
   R__insp.Inspect(R__cl, R__parent, "m_OneGoodE", &m_OneGoodE);
   R__insp.Inspect(R__cl, R__parent, "m_OneGoodK", &m_OneGoodK);
   R__insp.Inspect(R__cl, R__parent, "m_OneGoodPi", &m_OneGoodPi);
   R__insp.Inspect(R__cl, R__parent, "m_OneGoodH", &m_OneGoodH);
   TObject::ShowMembers(R__insp, R__parent);
}

//______________________________________________________________________________
const char *ESAPID::Class_Name()
{
   // Return the class name for ESAPID.
   return "ESAPID";
}

// Static variable to hold initialization object
static ESAPID::R__Init __gR__InitESAPID(0);

//______________________________________________________________________________
void Event::Streamer(TBuffer &R__b)
{
   // Stream an object of class Event.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      TObject::Streamer(R__b);
      R__b >> m_run;
      R__b >> m_eventId;
      m_L1T.Streamer(R__b);
      m_AcdDigiVec->Streamer(R__b);
      R__b >> m_numTiles;
      m_AcdHeader.Streamer(R__b);
      m_XgtDigiVec->Streamer(R__b);
      R__b >> m_numXgts;
      m_CalDigiVec->Streamer(R__b);
      R__b >> m_numLogs;
      m_CalHeader.Streamer(R__b);
      R__b >> m_TkrDigiVec;
      R__b >> m_numLayers;
      m_TkrHeader.Streamer(R__b);
      R__b.CheckByteCount(R__s, R__c, Event::IsA());
   } else {
      R__c = R__b.WriteVersion(Event::IsA(), kTRUE);
      TObject::Streamer(R__b);
      R__b << m_run;
      R__b << m_eventId;
      m_L1T.Streamer(R__b);
      m_AcdDigiVec->Streamer(R__b);
      R__b << m_numTiles;
      m_AcdHeader.Streamer(R__b);
      m_XgtDigiVec->Streamer(R__b);
      R__b << m_numXgts;
      m_CalDigiVec->Streamer(R__b);
      R__b << m_numLogs;
      m_CalHeader.Streamer(R__b);
      R__b << m_TkrDigiVec;
      R__b << m_numLayers;
      m_TkrHeader.Streamer(R__b);
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void Event::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
   // Inspect the data members of an object of class Event.

   TClass *R__cl  = Event::IsA();
   Int_t   R__ncp = strlen(R__parent);
   if (R__ncp || R__cl || R__insp.IsA()) { }
   R__insp.Inspect(R__cl, R__parent, "m_run", &m_run);
   R__insp.Inspect(R__cl, R__parent, "m_eventId", &m_eventId);
   R__insp.Inspect(R__cl, R__parent, "m_L1T", &m_L1T);
   m_L1T.ShowMembers(R__insp, strcat(R__parent,"m_L1T.")); R__parent[R__ncp] = 0;
   R__insp.Inspect(R__cl, R__parent, "*m_AcdDigiVec", &m_AcdDigiVec);
   R__insp.Inspect(R__cl, R__parent, "m_numTiles", &m_numTiles);
   R__insp.Inspect(R__cl, R__parent, "m_AcdHeader", &m_AcdHeader);
   m_AcdHeader.ShowMembers(R__insp, strcat(R__parent,"m_AcdHeader.")); R__parent[R__ncp] = 0;
   R__insp.Inspect(R__cl, R__parent, "*m_XgtDigiVec", &m_XgtDigiVec);
   R__insp.Inspect(R__cl, R__parent, "m_numXgts", &m_numXgts);
   R__insp.Inspect(R__cl, R__parent, "*m_CalDigiVec", &m_CalDigiVec);
   R__insp.Inspect(R__cl, R__parent, "m_numLogs", &m_numLogs);
   R__insp.Inspect(R__cl, R__parent, "m_CalHeader", &m_CalHeader);
   m_CalHeader.ShowMembers(R__insp, strcat(R__parent,"m_CalHeader.")); R__parent[R__ncp] = 0;
   R__insp.Inspect(R__cl, R__parent, "*m_TkrDigiVec", &m_TkrDigiVec);
   R__insp.Inspect(R__cl, R__parent, "m_numLayers", &m_numLayers);
   R__insp.Inspect(R__cl, R__parent, "m_TkrHeader", &m_TkrHeader);
   m_TkrHeader.ShowMembers(R__insp, strcat(R__parent,"m_TkrHeader.")); R__parent[R__ncp] = 0;
   TObject::ShowMembers(R__insp, R__parent);
}

//______________________________________________________________________________
const char *Event::Class_Name()
{
   // Return the class name for Event.
   return "Event";
}

// Static variable to hold initialization object
static Event::R__Init __gR__InitEvent(0);

//______________________________________________________________________________
void L1T::Streamer(TBuffer &R__b)
{
   // Stream an object of class L1T.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      TObject::Streamer(R__b);
      R__b >> m_trigCount;
      R__b >> m_trigTimeValue;
      R__b >> m_xCapture;
      R__b >> m_yCapture;
      R__b >> m_vetoCapture;
      R__b >> m_deadTimeReason;
      R__b >> m_deadTime;
      R__b.CheckByteCount(R__s, R__c, L1T::IsA());
   } else {
      R__c = R__b.WriteVersion(L1T::IsA(), kTRUE);
      TObject::Streamer(R__b);
      R__b << m_trigCount;
      R__b << m_trigTimeValue;
      R__b << m_xCapture;
      R__b << m_yCapture;
      R__b << m_vetoCapture;
      R__b << m_deadTimeReason;
      R__b << m_deadTime;
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void L1T::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
   // Inspect the data members of an object of class L1T.

   TClass *R__cl  = L1T::IsA();
   Int_t   R__ncp = strlen(R__parent);
   if (R__ncp || R__cl || R__insp.IsA()) { }
   R__insp.Inspect(R__cl, R__parent, "m_trigCount", &m_trigCount);
   R__insp.Inspect(R__cl, R__parent, "m_trigTimeValue", &m_trigTimeValue);
   R__insp.Inspect(R__cl, R__parent, "m_xCapture", &m_xCapture);
   R__insp.Inspect(R__cl, R__parent, "m_yCapture", &m_yCapture);
   R__insp.Inspect(R__cl, R__parent, "m_vetoCapture", &m_vetoCapture);
   R__insp.Inspect(R__cl, R__parent, "m_deadTimeReason", &m_deadTimeReason);
   R__insp.Inspect(R__cl, R__parent, "m_deadTime", &m_deadTime);
   TObject::ShowMembers(R__insp, R__parent);
}

//______________________________________________________________________________
const char *L1T::Class_Name()
{
   // Return the class name for L1T.
   return "L1T";
}

// Static variable to hold initialization object
static L1T::R__Init __gR__InitL1T(0);

//______________________________________________________________________________
void CalLogId::Streamer(TBuffer &R__b)
{
   // Stream an object of class CalLogId.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      TObject::Streamer(R__b);
      R__b >> m_tag;
      R__b.CheckByteCount(R__s, R__c, CalLogId::IsA());
   } else {
      R__c = R__b.WriteVersion(CalLogId::IsA(), kTRUE);
      TObject::Streamer(R__b);
      R__b << m_tag;
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void CalLogId::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
   // Inspect the data members of an object of class CalLogId.

   TClass *R__cl  = CalLogId::IsA();
   Int_t   R__ncp = strlen(R__parent);
   if (R__ncp || R__cl || R__insp.IsA()) { }
   R__insp.Inspect(R__cl, R__parent, "m_tag", &m_tag);
   TObject::ShowMembers(R__insp, R__parent);
}

//______________________________________________________________________________
const char *CalLogId::Class_Name()
{
   // Return the class name for CalLogId.
   return "CalLogId";
}

// Static variable to hold initialization object
static CalLogId::R__Init __gR__InitCalLogId(0);

//______________________________________________________________________________
void StripId::Streamer(TBuffer &R__b)
{
   // Stream an object of class StripId.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      TObject::Streamer(R__b);
      R__b >> m_tag;
      R__b.CheckByteCount(R__s, R__c, StripId::IsA());
   } else {
      R__c = R__b.WriteVersion(StripId::IsA(), kTRUE);
      TObject::Streamer(R__b);
      R__b << m_tag;
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void StripId::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
   // Inspect the data members of an object of class StripId.

   TClass *R__cl  = StripId::IsA();
   Int_t   R__ncp = strlen(R__parent);
   if (R__ncp || R__cl || R__insp.IsA()) { }
   R__insp.Inspect(R__cl, R__parent, "m_tag", &m_tag);
   TObject::ShowMembers(R__insp, R__parent);
}

//______________________________________________________________________________
const char *StripId::Class_Name()
{
   // Return the class name for StripId.
   return "StripId";
}

// Static variable to hold initialization object
static StripId::R__Init __gR__InitStripId(0);

//______________________________________________________________________________
void Tagger::Streamer(TBuffer &R__b)
{
   // Stream an object of class Tagger.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      TObject::Streamer(R__b);
      R__b >> m_PID;
      R__b >> m_nBeamEnergy;
      R__b >> m_nMagCurrent;
      R__b.CheckByteCount(R__s, R__c, Tagger::IsA());
   } else {
      R__c = R__b.WriteVersion(Tagger::IsA(), kTRUE);
      TObject::Streamer(R__b);
      R__b << m_PID;
      R__b << m_nBeamEnergy;
      R__b << m_nMagCurrent;
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void Tagger::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
   // Inspect the data members of an object of class Tagger.

   TClass *R__cl  = Tagger::IsA();
   Int_t   R__ncp = strlen(R__parent);
   if (R__ncp || R__cl || R__insp.IsA()) { }
   R__insp.Inspect(R__cl, R__parent, "*m_PID", &m_PID);
   R__insp.Inspect(R__cl, R__parent, "m_nBeamEnergy", &m_nBeamEnergy);
   R__insp.Inspect(R__cl, R__parent, "m_nMagCurrent", &m_nMagCurrent);
   TObject::ShowMembers(R__insp, R__parent);
}

//______________________________________________________________________________
const char *Tagger::Class_Name()
{
   // Return the class name for Tagger.
   return "Tagger";
}

// Static variable to hold initialization object
static Tagger::R__Init __gR__InitTagger(0);

//______________________________________________________________________________
void AcdId::Streamer(TBuffer &R__b)
{
   // Stream an object of class AcdId.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      TObject::Streamer(R__b);
      R__b >> m_id;
      R__b.CheckByteCount(R__s, R__c, AcdId::IsA());
   } else {
      R__c = R__b.WriteVersion(AcdId::IsA(), kTRUE);
      TObject::Streamer(R__b);
      R__b << m_id;
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void AcdId::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
   // Inspect the data members of an object of class AcdId.

   TClass *R__cl  = AcdId::IsA();
   Int_t   R__ncp = strlen(R__parent);
   if (R__ncp || R__cl || R__insp.IsA()) { }
   R__insp.Inspect(R__cl, R__parent, "m_id", &m_id);
   TObject::ShowMembers(R__insp, R__parent);
}

//______________________________________________________________________________
const char *AcdId::Class_Name()
{
   // Return the class name for AcdId.
   return "AcdId";
}

// Static variable to hold initialization object
static AcdId::R__Init __gR__InitAcdId(0);

//______________________________________________________________________________
void TkrLayer::Streamer(TBuffer &R__b)
{
   // Stream an object of class TkrLayer.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      TObject::Streamer(R__b);
      R__b >> m_layer;
      R__b >> m_xy;
      R__b.ReadStaticArray(m_ToT);
      R__b.ReadStaticArray(m_errf);
      R__b >> m_strips;
      R__b >> m_numStrips;
      R__b.CheckByteCount(R__s, R__c, TkrLayer::IsA());
   } else {
      R__c = R__b.WriteVersion(TkrLayer::IsA(), kTRUE);
      TObject::Streamer(R__b);
      R__b << m_layer;
      R__b << m_xy;
      R__b.WriteArray(m_ToT, 2);
      R__b.WriteArray(m_errf, 2);
      R__b << m_strips;
      R__b << m_numStrips;
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void TkrLayer::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
   // Inspect the data members of an object of class TkrLayer.

   TClass *R__cl  = TkrLayer::IsA();
   Int_t   R__ncp = strlen(R__parent);
   if (R__ncp || R__cl || R__insp.IsA()) { }
   R__insp.Inspect(R__cl, R__parent, "m_layer", &m_layer);
   R__insp.Inspect(R__cl, R__parent, "m_xy", &m_xy);
   R__insp.Inspect(R__cl, R__parent, "m_ToT[2]", m_ToT);
   R__insp.Inspect(R__cl, R__parent, "m_errf[2]", m_errf);
   R__insp.Inspect(R__cl, R__parent, "*m_strips", &m_strips);
   R__insp.Inspect(R__cl, R__parent, "m_numStrips", &m_numStrips);
   TObject::ShowMembers(R__insp, R__parent);
}

//______________________________________________________________________________
const char *TkrLayer::Class_Name()
{
   // Return the class name for TkrLayer.
   return "TkrLayer";
}

// Static variable to hold initialization object
static TkrLayer::R__Init __gR__InitTkrLayer(0);

//______________________________________________________________________________
void SubSystemHeader::Streamer(TBuffer &R__b)
{
   // Stream an object of class SubSystemHeader.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      TObject::Streamer(R__b);
      R__b >> m_eventId;
      R__b >> m_timerWord;
      R__b >> m_TREQ_VETO_status;
      R__b >> m_deadtime_and_cause;
      R__b.CheckByteCount(R__s, R__c, SubSystemHeader::IsA());
   } else {
      R__c = R__b.WriteVersion(SubSystemHeader::IsA(), kTRUE);
      TObject::Streamer(R__b);
      R__b << m_eventId;
      R__b << m_timerWord;
      R__b << m_TREQ_VETO_status;
      R__b << m_deadtime_and_cause;
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void SubSystemHeader::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
   // Inspect the data members of an object of class SubSystemHeader.

   TClass *R__cl  = SubSystemHeader::IsA();
   Int_t   R__ncp = strlen(R__parent);
   if (R__ncp || R__cl || R__insp.IsA()) { }
   R__insp.Inspect(R__cl, R__parent, "m_eventId", &m_eventId);
   R__insp.Inspect(R__cl, R__parent, "m_timerWord", &m_timerWord);
   R__insp.Inspect(R__cl, R__parent, "m_TREQ_VETO_status", &m_TREQ_VETO_status);
   R__insp.Inspect(R__cl, R__parent, "m_deadtime_and_cause", &m_deadtime_and_cause);
   TObject::ShowMembers(R__insp, R__parent);
}

//______________________________________________________________________________
const char *SubSystemHeader::Class_Name()
{
   // Return the class name for SubSystemHeader.
   return "SubSystemHeader";
}

// Static variable to hold initialization object
static SubSystemHeader::R__Init __gR__InitSubSystemHeader(0);

//______________________________________________________________________________
void CalHeader::Streamer(TBuffer &R__b)
{
   // Stream an object of class CalHeader.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      SubSystemHeader::Streamer(R__b);
      R__b.CheckByteCount(R__s, R__c, CalHeader::IsA());
   } else {
      R__c = R__b.WriteVersion(CalHeader::IsA(), kTRUE);
      SubSystemHeader::Streamer(R__b);
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void CalHeader::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
   // Inspect the data members of an object of class CalHeader.

   TClass *R__cl  = CalHeader::IsA();
   Int_t   R__ncp = strlen(R__parent);
   if (R__ncp || R__cl || R__insp.IsA()) { }
   SubSystemHeader::ShowMembers(R__insp, R__parent);
}

//______________________________________________________________________________
const char *CalHeader::Class_Name()
{
   // Return the class name for CalHeader.
   return "CalHeader";
}

// Static variable to hold initialization object
static CalHeader::R__Init __gR__InitCalHeader(0);

//______________________________________________________________________________
void AcdHeader::Streamer(TBuffer &R__b)
{
   // Stream an object of class AcdHeader.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      SubSystemHeader::Streamer(R__b);
      R__b.CheckByteCount(R__s, R__c, AcdHeader::IsA());
   } else {
      R__c = R__b.WriteVersion(AcdHeader::IsA(), kTRUE);
      SubSystemHeader::Streamer(R__b);
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void AcdHeader::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
   // Inspect the data members of an object of class AcdHeader.

   TClass *R__cl  = AcdHeader::IsA();
   Int_t   R__ncp = strlen(R__parent);
   if (R__ncp || R__cl || R__insp.IsA()) { }
   SubSystemHeader::ShowMembers(R__insp, R__parent);
}

//______________________________________________________________________________
const char *AcdHeader::Class_Name()
{
   // Return the class name for AcdHeader.
   return "AcdHeader";
}

// Static variable to hold initialization object
static AcdHeader::R__Init __gR__InitAcdHeader(0);

//______________________________________________________________________________
void TkrHeader::Streamer(TBuffer &R__b)
{
   // Stream an object of class TkrHeader.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      SubSystemHeader::Streamer(R__b);
      R__b.CheckByteCount(R__s, R__c, TkrHeader::IsA());
   } else {
      R__c = R__b.WriteVersion(TkrHeader::IsA(), kTRUE);
      SubSystemHeader::Streamer(R__b);
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void TkrHeader::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
   // Inspect the data members of an object of class TkrHeader.

   TClass *R__cl  = TkrHeader::IsA();
   Int_t   R__ncp = strlen(R__parent);
   if (R__ncp || R__cl || R__insp.IsA()) { }
   SubSystemHeader::ShowMembers(R__insp, R__parent);
}

//______________________________________________________________________________
const char *TkrHeader::Class_Name()
{
   // Return the class name for TkrHeader.
   return "TkrHeader";
}

// Static variable to hold initialization object
static TkrHeader::R__Init __gR__InitTkrHeader(0);

/********************************************************
* EventCint.cxx
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

extern "C" void G__cpp_reset_tagtableEventCint();

extern "C" void G__set_cpp_environmentEventCint() {
  G__add_compiledheader("TROOT.h");
  G__add_compiledheader("TMemberInspector.h");
  G__add_compiledheader("AcdHeader.h");
  G__add_compiledheader("AcdId.h");
  G__add_compiledheader("AcdTile.h");
  G__add_compiledheader("CalHeader.h");
  G__add_compiledheader("CalLog.h");
  G__add_compiledheader("CalLogId.h");
  G__add_compiledheader("ESAPID.h");
  G__add_compiledheader("Event.h");
  G__add_compiledheader("L1T.h");
  G__add_compiledheader("StripId.h");
  G__add_compiledheader("SubSystemHeader.h");
  G__add_compiledheader("Tagger.h");
  G__add_compiledheader("TkrHeader.h");
  G__add_compiledheader("TkrLayer.h");
  G__cpp_reset_tagtableEventCint();
}
class G__EventCintdOcxx_tag {};

void* operator new(size_t size,G__EventCintdOcxx_tag* p) {
  if(p && G__PVOID!=G__getgvp()) return((void*)p);
#ifndef G__ROOT
  return(malloc(size));
#else
  return(::operator new(size));
#endif
}

/* dummy, for exception */
#ifdef G__EH_DUMMY_DELETE
void operator delete(void *p,G__EventCintdOcxx_tag* x) {
  if((long)p==G__getgvp() && G__PVOID!=G__getgvp()) return;
#ifndef G__ROOT
  free(p);
#else
  ::operator delete(p);
#endif
}
#endif

static void G__operator_delete(void *p) {
  if((long)p==G__getgvp() && G__PVOID!=G__getgvp()) return;
#ifndef G__ROOT
  free(p);
#else
  ::operator delete(p);
#endif
}

void G__DELDMY_EventCintdOcxx() { G__operator_delete(0); }

extern "C" int G__cpp_dllrevEventCint() { return(30051472); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* SubSystemHeader */
static int G__SubSystemHeader_SubSystemHeader_0_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   SubSystemHeader *p=NULL;
   if(G__getaryconstruct()) p=new SubSystemHeader[G__getaryconstruct()];
   else                    p=new SubSystemHeader;
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__EventCintLN_SubSystemHeader);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SubSystemHeader_Clean_2_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      G__setnull(result7);
      ((SubSystemHeader*)(G__getstructoffset()))->Clean((Option_t*)G__int(libp->para[0]));
      break;
   case 0:
      G__setnull(result7);
      ((SubSystemHeader*)(G__getstructoffset()))->Clean();
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SubSystemHeader_getEventId_3_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,107,(long)((SubSystemHeader*)(G__getstructoffset()))->getEventId());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SubSystemHeader_setEventId_4_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((SubSystemHeader*)(G__getstructoffset()))->setEventId((unsigned int)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SubSystemHeader_getTimerWord_5_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,107,(long)((SubSystemHeader*)(G__getstructoffset()))->getTimerWord());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SubSystemHeader_setTimerWord_6_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((SubSystemHeader*)(G__getstructoffset()))->setTimerWord((unsigned int)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SubSystemHeader_getStatus_7_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,107,(long)((SubSystemHeader*)(G__getstructoffset()))->getStatus());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SubSystemHeader_setStatus_8_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((SubSystemHeader*)(G__getstructoffset()))->setStatus((unsigned int)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SubSystemHeader_getDeadTime_9_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,107,(long)((SubSystemHeader*)(G__getstructoffset()))->getDeadTime());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SubSystemHeader_getDeadTimeCause_0_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,107,(long)((SubSystemHeader*)(G__getstructoffset()))->getDeadTimeCause());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SubSystemHeader_getDeadTimeAndCause_1_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,107,(long)((SubSystemHeader*)(G__getstructoffset()))->getDeadTimeAndCause());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SubSystemHeader_setDeadTimeAndCause_2_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((SubSystemHeader*)(G__getstructoffset()))->setDeadTimeAndCause((unsigned int)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SubSystemHeader_Class_3_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,85,(long)((SubSystemHeader*)(G__getstructoffset()))->Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SubSystemHeader_Class_Name_4_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,67,(long)((SubSystemHeader*)(G__getstructoffset()))->Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SubSystemHeader_Class_Version_5_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,115,(long)((SubSystemHeader*)(G__getstructoffset()))->Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SubSystemHeader_Dictionary_6_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((SubSystemHeader*)(G__getstructoffset()))->Dictionary();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SubSystemHeader_IsA_7_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,85,(long)((const SubSystemHeader*)(G__getstructoffset()))->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SubSystemHeader_ShowMembers_8_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((SubSystemHeader*)(G__getstructoffset()))->ShowMembers(*(TMemberInspector*)libp->para[0].ref,(char*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SubSystemHeader_Streamer_9_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((SubSystemHeader*)(G__getstructoffset()))->Streamer(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SubSystemHeader_StreamerNVirtual_0_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((SubSystemHeader*)(G__getstructoffset()))->StreamerNVirtual(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SubSystemHeader_DeclFileName_1_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,67,(long)((SubSystemHeader*)(G__getstructoffset()))->DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SubSystemHeader_DeclFileLine_2_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((SubSystemHeader*)(G__getstructoffset()))->DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SubSystemHeader_ImplFileName_3_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,67,(long)((SubSystemHeader*)(G__getstructoffset()))->ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SubSystemHeader_ImplFileLine_4_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((SubSystemHeader*)(G__getstructoffset()))->ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__SubSystemHeader_SubSystemHeader_5_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash)
{
   SubSystemHeader *p;
   p=new SubSystemHeader(*(SubSystemHeader*)G__int(libp->para[0]));
   result7->obj.i = (long)p;
   result7->ref = (long)p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__EventCintLN_SubSystemHeader);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef SubSystemHeader G__TSubSystemHeader;
static int G__SubSystemHeader_wASubSystemHeader_6_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (SubSystemHeader *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         delete (SubSystemHeader *)((G__getstructoffset())+sizeof(SubSystemHeader)*i);
   else  delete (SubSystemHeader *)(G__getstructoffset());
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* AcdHeader */
static int G__AcdHeader_AcdHeader_0_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   AcdHeader *p=NULL;
   if(G__getaryconstruct()) p=new AcdHeader[G__getaryconstruct()];
   else                    p=new AcdHeader;
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__EventCintLN_AcdHeader);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcdHeader_Clean_2_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      G__setnull(result7);
      ((AcdHeader*)(G__getstructoffset()))->Clean((Option_t*)G__int(libp->para[0]));
      break;
   case 0:
      G__setnull(result7);
      ((AcdHeader*)(G__getstructoffset()))->Clean();
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcdHeader_Class_3_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,85,(long)((AcdHeader*)(G__getstructoffset()))->Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcdHeader_Class_Name_4_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,67,(long)((AcdHeader*)(G__getstructoffset()))->Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcdHeader_Class_Version_5_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,115,(long)((AcdHeader*)(G__getstructoffset()))->Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcdHeader_Dictionary_6_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((AcdHeader*)(G__getstructoffset()))->Dictionary();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcdHeader_IsA_7_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,85,(long)((const AcdHeader*)(G__getstructoffset()))->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcdHeader_ShowMembers_8_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((AcdHeader*)(G__getstructoffset()))->ShowMembers(*(TMemberInspector*)libp->para[0].ref,(char*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcdHeader_Streamer_9_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((AcdHeader*)(G__getstructoffset()))->Streamer(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcdHeader_StreamerNVirtual_0_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((AcdHeader*)(G__getstructoffset()))->StreamerNVirtual(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcdHeader_DeclFileName_1_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,67,(long)((AcdHeader*)(G__getstructoffset()))->DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcdHeader_DeclFileLine_2_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((AcdHeader*)(G__getstructoffset()))->DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcdHeader_ImplFileName_3_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,67,(long)((AcdHeader*)(G__getstructoffset()))->ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcdHeader_ImplFileLine_4_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((AcdHeader*)(G__getstructoffset()))->ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__AcdHeader_AcdHeader_5_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash)
{
   AcdHeader *p;
   p=new AcdHeader(*(AcdHeader*)G__int(libp->para[0]));
   result7->obj.i = (long)p;
   result7->ref = (long)p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__EventCintLN_AcdHeader);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef AcdHeader G__TAcdHeader;
static int G__AcdHeader_wAAcdHeader_6_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (AcdHeader *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         delete (AcdHeader *)((G__getstructoffset())+sizeof(AcdHeader)*i);
   else  delete (AcdHeader *)(G__getstructoffset());
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* AcdId */
static int G__AcdId_AcdId_4_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   AcdId *p=NULL;
   if(G__getaryconstruct()) p=new AcdId[G__getaryconstruct()];
   else                    p=new AcdId;
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__EventCintLN_AcdId);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcdId_AcdId_5_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   AcdId *p=NULL;
      p = new AcdId(*(AcdId*)libp->para[0].ref);
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__EventCintLN_AcdId);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcdId_AcdId_6_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   AcdId *p=NULL;
      p = new AcdId(
(short)G__int(libp->para[0]),(short)G__int(libp->para[1])
,(short)G__int(libp->para[2]),(short)G__int(libp->para[3]));
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__EventCintLN_AcdId);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcdId_getId_8_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,114,(long)((const AcdId*)(G__getstructoffset()))->getId());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcdId_isTop_9_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((const AcdId*)(G__getstructoffset()))->isTop());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcdId_isSide_0_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((const AcdId*)(G__getstructoffset()))->isSide());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcdId_getLayer_1_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,115,(long)((const AcdId*)(G__getstructoffset()))->getLayer());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcdId_getFace_2_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,115,(long)((const AcdId*)(G__getstructoffset()))->getFace());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcdId_getRow_3_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,115,(long)((const AcdId*)(G__getstructoffset()))->getRow());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcdId_getColumn_4_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,115,(long)((const AcdId*)(G__getstructoffset()))->getColumn());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcdId_setId_5_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((AcdId*)(G__getstructoffset()))->setId((UShort_t)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcdId_Class_8_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,85,(long)((AcdId*)(G__getstructoffset()))->Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcdId_Class_Name_9_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,67,(long)((AcdId*)(G__getstructoffset()))->Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcdId_Class_Version_0_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,115,(long)((AcdId*)(G__getstructoffset()))->Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcdId_Dictionary_1_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((AcdId*)(G__getstructoffset()))->Dictionary();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcdId_IsA_2_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,85,(long)((const AcdId*)(G__getstructoffset()))->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcdId_ShowMembers_3_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((AcdId*)(G__getstructoffset()))->ShowMembers(*(TMemberInspector*)libp->para[0].ref,(char*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcdId_Streamer_4_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((AcdId*)(G__getstructoffset()))->Streamer(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcdId_StreamerNVirtual_5_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((AcdId*)(G__getstructoffset()))->StreamerNVirtual(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcdId_DeclFileName_6_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,67,(long)((AcdId*)(G__getstructoffset()))->DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcdId_DeclFileLine_7_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((AcdId*)(G__getstructoffset()))->DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcdId_ImplFileName_8_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,67,(long)((AcdId*)(G__getstructoffset()))->ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcdId_ImplFileLine_9_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((AcdId*)(G__getstructoffset()))->ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef AcdId G__TAcdId;
static int G__AcdId_wAAcdId_0_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (AcdId *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         delete (AcdId *)((G__getstructoffset())+sizeof(AcdId)*i);
   else  delete (AcdId *)(G__getstructoffset());
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* AcdTile */
static int G__AcdTile_AcdTile_0_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   AcdTile *p=NULL;
   if(G__getaryconstruct()) p=new AcdTile[G__getaryconstruct()];
   else                    p=new AcdTile;
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__EventCintLN_AcdTile);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcdTile_AcdTile_1_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   AcdTile *p=NULL;
      p = new AcdTile((UShort_t)G__int(libp->para[0]));
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__EventCintLN_AcdTile);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcdTile_getId_3_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,85,(long)((AcdTile*)(G__getstructoffset()))->getId());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcdTile_getPulseHeight_4_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,114,(long)((AcdTile*)(G__getstructoffset()))->getPulseHeight());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcdTile_getVeto_5_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,98,(long)((AcdTile*)(G__getstructoffset()))->getVeto());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcdTile_setPulseHeight_6_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,98,(long)((AcdTile*)(G__getstructoffset()))->setPulseHeight((UShort_t)G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcdTile_setVeto_7_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,98,(long)((AcdTile*)(G__getstructoffset()))->setVeto((UChar_t)G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcdTile_Compare_8_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((const AcdTile*)(G__getstructoffset()))->Compare((const TObject*)G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcdTile_IsSortable_9_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,98,(long)((const AcdTile*)(G__getstructoffset()))->IsSortable());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcdTile_Class_0_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,85,(long)((AcdTile*)(G__getstructoffset()))->Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcdTile_Class_Name_1_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,67,(long)((AcdTile*)(G__getstructoffset()))->Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcdTile_Class_Version_2_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,115,(long)((AcdTile*)(G__getstructoffset()))->Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcdTile_Dictionary_3_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((AcdTile*)(G__getstructoffset()))->Dictionary();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcdTile_IsA_4_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,85,(long)((const AcdTile*)(G__getstructoffset()))->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcdTile_ShowMembers_5_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((AcdTile*)(G__getstructoffset()))->ShowMembers(*(TMemberInspector*)libp->para[0].ref,(char*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcdTile_Streamer_6_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((AcdTile*)(G__getstructoffset()))->Streamer(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcdTile_StreamerNVirtual_7_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((AcdTile*)(G__getstructoffset()))->StreamerNVirtual(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcdTile_DeclFileName_8_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,67,(long)((AcdTile*)(G__getstructoffset()))->DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcdTile_DeclFileLine_9_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((AcdTile*)(G__getstructoffset()))->DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcdTile_ImplFileName_0_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,67,(long)((AcdTile*)(G__getstructoffset()))->ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AcdTile_ImplFileLine_1_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((AcdTile*)(G__getstructoffset()))->ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__AcdTile_AcdTile_2_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash)
{
   AcdTile *p;
   p=new AcdTile(*(AcdTile*)G__int(libp->para[0]));
   result7->obj.i = (long)p;
   result7->ref = (long)p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__EventCintLN_AcdTile);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef AcdTile G__TAcdTile;
static int G__AcdTile_wAAcdTile_3_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (AcdTile *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         delete (AcdTile *)((G__getstructoffset())+sizeof(AcdTile)*i);
   else  delete (AcdTile *)(G__getstructoffset());
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* CalHeader */
static int G__CalHeader_CalHeader_0_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   CalHeader *p=NULL;
   if(G__getaryconstruct()) p=new CalHeader[G__getaryconstruct()];
   else                    p=new CalHeader;
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__EventCintLN_CalHeader);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CalHeader_Clean_2_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      G__setnull(result7);
      ((CalHeader*)(G__getstructoffset()))->Clean((Option_t*)G__int(libp->para[0]));
      break;
   case 0:
      G__setnull(result7);
      ((CalHeader*)(G__getstructoffset()))->Clean();
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CalHeader_Class_3_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,85,(long)((CalHeader*)(G__getstructoffset()))->Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CalHeader_Class_Name_4_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,67,(long)((CalHeader*)(G__getstructoffset()))->Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CalHeader_Class_Version_5_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,115,(long)((CalHeader*)(G__getstructoffset()))->Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CalHeader_Dictionary_6_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((CalHeader*)(G__getstructoffset()))->Dictionary();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CalHeader_IsA_7_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,85,(long)((const CalHeader*)(G__getstructoffset()))->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CalHeader_ShowMembers_8_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((CalHeader*)(G__getstructoffset()))->ShowMembers(*(TMemberInspector*)libp->para[0].ref,(char*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CalHeader_Streamer_9_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((CalHeader*)(G__getstructoffset()))->Streamer(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CalHeader_StreamerNVirtual_0_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((CalHeader*)(G__getstructoffset()))->StreamerNVirtual(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CalHeader_DeclFileName_1_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,67,(long)((CalHeader*)(G__getstructoffset()))->DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CalHeader_DeclFileLine_2_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((CalHeader*)(G__getstructoffset()))->DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CalHeader_ImplFileName_3_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,67,(long)((CalHeader*)(G__getstructoffset()))->ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CalHeader_ImplFileLine_4_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((CalHeader*)(G__getstructoffset()))->ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__CalHeader_CalHeader_5_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash)
{
   CalHeader *p;
   p=new CalHeader(*(CalHeader*)G__int(libp->para[0]));
   result7->obj.i = (long)p;
   result7->ref = (long)p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__EventCintLN_CalHeader);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef CalHeader G__TCalHeader;
static int G__CalHeader_wACalHeader_6_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (CalHeader *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         delete (CalHeader *)((G__getstructoffset())+sizeof(CalHeader)*i);
   else  delete (CalHeader *)(G__getstructoffset());
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* CalLogId */
static int G__CalLogId_CalLogId_1_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   CalLogId *p=NULL;
   if(G__getaryconstruct()) p=new CalLogId[G__getaryconstruct()];
   else                    p=new CalLogId;
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__EventCintLN_CalLogId);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CalLogId_CalLogId_2_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   CalLogId *p=NULL;
      p = new CalLogId((UInt_t)G__int(libp->para[0]));
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__EventCintLN_CalLogId);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CalLogId_fillIdFromGeom_4_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,98,(long)((CalLogId*)(G__getstructoffset()))->fillIdFromGeom((CalLogId::TAG_STRUCT*)G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CalLogId_fillGeomFromId_5_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,98,(long)((CalLogId*)(G__getstructoffset()))->fillGeomFromId((CalLogId::TAG_STRUCT*)G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CalLogId_fillTagWord_6_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,104,(long)((CalLogId*)(G__getstructoffset()))->fillTagWord((CalLogId::TAG_STRUCT*)G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CalLogId_fillTagStruct_7_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((CalLogId*)(G__getstructoffset()))->fillTagStruct((UInt_t)G__int(libp->para[0]),(CalLogId::TAG_STRUCT*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CalLogId_getTag_8_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,104,(long)((const CalLogId*)(G__getstructoffset()))->getTag());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CalLogId_getColumn_9_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,104,(long)((const CalLogId*)(G__getstructoffset()))->getColumn());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CalLogId_getLayer_0_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,104,(long)((const CalLogId*)(G__getstructoffset()))->getLayer());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CalLogId_getId_1_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,104,(long)((const CalLogId*)(G__getstructoffset()))->getId());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CalLogId_getXY_2_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((const CalLogId*)(G__getstructoffset()))->getXY());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CalLogId_getPipeline_3_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,104,(long)((const CalLogId*)(G__getstructoffset()))->getPipeline());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CalLogId_getSequence_4_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,104,(long)((const CalLogId*)(G__getstructoffset()))->getSequence());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CalLogId_setTag_5_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,98,(long)((CalLogId*)(G__getstructoffset()))->setTag((UInt_t)G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CalLogId_setTag_6_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,98,(long)((CalLogId*)(G__getstructoffset()))->setTag((CalLogId::TAG_STRUCT*)G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CalLogId_setColumn_7_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,98,(long)((CalLogId*)(G__getstructoffset()))->setColumn((UInt_t)G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CalLogId_setLayer_8_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,98,(long)((CalLogId*)(G__getstructoffset()))->setLayer((UInt_t)G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CalLogId_setXY_9_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,98,(long)((CalLogId*)(G__getstructoffset()))->setXY((CalLogId::CALAxes)G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CalLogId_Class_0_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,85,(long)((CalLogId*)(G__getstructoffset()))->Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CalLogId_Class_Name_1_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,67,(long)((CalLogId*)(G__getstructoffset()))->Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CalLogId_Class_Version_2_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,115,(long)((CalLogId*)(G__getstructoffset()))->Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CalLogId_Dictionary_3_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((CalLogId*)(G__getstructoffset()))->Dictionary();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CalLogId_IsA_4_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,85,(long)((const CalLogId*)(G__getstructoffset()))->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CalLogId_ShowMembers_5_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((CalLogId*)(G__getstructoffset()))->ShowMembers(*(TMemberInspector*)libp->para[0].ref,(char*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CalLogId_Streamer_6_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((CalLogId*)(G__getstructoffset()))->Streamer(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CalLogId_StreamerNVirtual_7_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((CalLogId*)(G__getstructoffset()))->StreamerNVirtual(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CalLogId_DeclFileName_8_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,67,(long)((CalLogId*)(G__getstructoffset()))->DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CalLogId_DeclFileLine_9_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((CalLogId*)(G__getstructoffset()))->DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CalLogId_ImplFileName_0_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,67,(long)((CalLogId*)(G__getstructoffset()))->ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CalLogId_ImplFileLine_1_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((CalLogId*)(G__getstructoffset()))->ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__CalLogId_CalLogId_2_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash)
{
   CalLogId *p;
   p=new CalLogId(*(CalLogId*)G__int(libp->para[0]));
   result7->obj.i = (long)p;
   result7->ref = (long)p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__EventCintLN_CalLogId);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef CalLogId G__TCalLogId;
static int G__CalLogId_wACalLogId_3_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (CalLogId *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         delete (CalLogId *)((G__getstructoffset())+sizeof(CalLogId)*i);
   else  delete (CalLogId *)(G__getstructoffset());
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* CalLog */
static int G__CalLog_CalLog_0_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   CalLog *p=NULL;
   if(G__getaryconstruct()) p=new CalLog[G__getaryconstruct()];
   else                    p=new CalLog;
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__EventCintLN_CalLog);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CalLog_Compare_2_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((const CalLog*)(G__getstructoffset()))->Compare((const TObject*)G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CalLog_IsSortable_3_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,98,(long)((const CalLog*)(G__getstructoffset()))->IsSortable());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CalLog_getAdc_9_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,114,(long)((const CalLog*)(G__getstructoffset()))->getAdc((CalLog::LogFace)G__int(libp->para[0]),(short)G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CalLog_getAdcSelectedRange_0_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 2:
      G__letint(result7,114,(long)((const CalLog*)(G__getstructoffset()))->getAdcSelectedRange((CalLog::LogFace)G__int(libp->para[0]),(CalLog::AdcRange)G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7,114,(long)((const CalLog*)(G__getstructoffset()))->getAdcSelectedRange((CalLog::LogFace)G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CalLog_getRange_1_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,114,(long)((const CalLog*)(G__getstructoffset()))->getRange((CalLog::LogFace)G__int(libp->para[0]),(short)G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CalLog_getMode_2_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((const CalLog*)(G__getstructoffset()))->getMode());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CalLog_setAdcValue_3_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 3:
      G__letint(result7,98,(long)((CalLog*)(G__getstructoffset()))->setAdcValue((UShort_t)G__int(libp->para[0]),(CalLog::LogFace)G__int(libp->para[1])
,(CalLog::AdcRange)G__int(libp->para[2])));
      break;
   case 2:
      G__letint(result7,98,(long)((CalLog*)(G__getstructoffset()))->setAdcValue((UShort_t)G__int(libp->para[0]),(CalLog::LogFace)G__int(libp->para[1])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CalLog_setAdcId_4_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 3:
      G__letint(result7,98,(long)((CalLog*)(G__getstructoffset()))->setAdcId((UShort_t)G__int(libp->para[0]),(CalLog::LogFace)G__int(libp->para[1])
,(CalLog::AdcRange)G__int(libp->para[2])));
      break;
   case 2:
      G__letint(result7,98,(long)((CalLog*)(G__getstructoffset()))->setAdcId((UShort_t)G__int(libp->para[0]),(CalLog::LogFace)G__int(libp->para[1])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CalLog_setAdcPinId_5_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 3:
      G__letint(result7,98,(long)((CalLog*)(G__getstructoffset()))->setAdcPinId((UShort_t)G__int(libp->para[0]),(CalLog::LogFace)G__int(libp->para[1])
,(CalLog::AdcRange)G__int(libp->para[2])));
      break;
   case 2:
      G__letint(result7,98,(long)((CalLog*)(G__getstructoffset()))->setAdcPinId((UShort_t)G__int(libp->para[0]),(CalLog::LogFace)G__int(libp->para[1])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CalLog_setAdcRangeScale_6_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 3:
      G__letint(result7,98,(long)((CalLog*)(G__getstructoffset()))->setAdcRangeScale((UShort_t)G__int(libp->para[0]),(CalLog::LogFace)G__int(libp->para[1])
,(CalLog::AdcRange)G__int(libp->para[2])));
      break;
   case 2:
      G__letint(result7,98,(long)((CalLog*)(G__getstructoffset()))->setAdcRangeScale((UShort_t)G__int(libp->para[0]),(CalLog::LogFace)G__int(libp->para[1])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CalLog_setAdcWord_7_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 3:
      G__setnull(result7);
      ((CalLog*)(G__getstructoffset()))->setAdcWord((UShort_t)G__int(libp->para[0]),(CalLog::LogFace)G__int(libp->para[1])
,(CalLog::AdcRange)G__int(libp->para[2]));
      break;
   case 2:
      G__setnull(result7);
      ((CalLog*)(G__getstructoffset()))->setAdcWord((UShort_t)G__int(libp->para[0]),(CalLog::LogFace)G__int(libp->para[1]));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CalLog_setTriggerMode_8_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((CalLog*)(G__getstructoffset()))->setTriggerMode((CalLog::CalTrigMode)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CalLog_getCalLogId_9_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,85,(long)((CalLog*)(G__getstructoffset()))->getCalLogId());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CalLog_Class_0_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,85,(long)((CalLog*)(G__getstructoffset()))->Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CalLog_Class_Name_1_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,67,(long)((CalLog*)(G__getstructoffset()))->Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CalLog_Class_Version_2_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,115,(long)((CalLog*)(G__getstructoffset()))->Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CalLog_Dictionary_3_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((CalLog*)(G__getstructoffset()))->Dictionary();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CalLog_IsA_4_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,85,(long)((const CalLog*)(G__getstructoffset()))->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CalLog_ShowMembers_5_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((CalLog*)(G__getstructoffset()))->ShowMembers(*(TMemberInspector*)libp->para[0].ref,(char*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CalLog_Streamer_6_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((CalLog*)(G__getstructoffset()))->Streamer(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CalLog_StreamerNVirtual_7_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((CalLog*)(G__getstructoffset()))->StreamerNVirtual(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CalLog_DeclFileName_8_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,67,(long)((CalLog*)(G__getstructoffset()))->DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CalLog_DeclFileLine_9_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((CalLog*)(G__getstructoffset()))->DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CalLog_ImplFileName_0_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,67,(long)((CalLog*)(G__getstructoffset()))->ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__CalLog_ImplFileLine_1_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((CalLog*)(G__getstructoffset()))->ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__CalLog_CalLog_2_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash)
{
   CalLog *p;
   p=new CalLog(*(CalLog*)G__int(libp->para[0]));
   result7->obj.i = (long)p;
   result7->ref = (long)p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__EventCintLN_CalLog);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef CalLog G__TCalLog;
static int G__CalLog_wACalLog_3_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (CalLog *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         delete (CalLog *)((G__getstructoffset())+sizeof(CalLog)*i);
   else  delete (CalLog *)(G__getstructoffset());
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ESAPID */
static int G__ESAPID_ESAPID_1_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   ESAPID *p=NULL;
   if(G__getaryconstruct()) p=new ESAPID[G__getaryconstruct()];
   else                    p=new ESAPID;
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__EventCintLN_ESAPID);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ESAPID_getClean_3_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,98,(long)((ESAPID*)(G__getstructoffset()))->getClean());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ESAPID_getXbeam_4_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letdouble(result7,102,(double)((ESAPID*)(G__getstructoffset()))->getXbeam());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ESAPID_getYbeam_5_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letdouble(result7,102,(double)((ESAPID*)(G__getstructoffset()))->getYbeam());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ESAPID_getNpart_6_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((ESAPID*)(G__getstructoffset()))->getNpart());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ESAPID_getIDN_7_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((ESAPID*)(G__getstructoffset()))->getIDN((Int_t)G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ESAPID_getMomN_8_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letdouble(result7,102,(double)((ESAPID*)(G__getstructoffset()))->getMomN((Int_t)G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ESAPID_getBeamPbN_9_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letdouble(result7,102,(double)((ESAPID*)(G__getstructoffset()))->getBeamPbN((Int_t)G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ESAPID_getCADC_0_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letdouble(result7,102,(double)((ESAPID*)(G__getstructoffset()))->getCADC());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ESAPID_getTOFN_1_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letdouble(result7,102,(double)((ESAPID*)(G__getstructoffset()))->getTOFN((Int_t)G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ESAPID_getTOFC_2_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letdouble(result7,102,(double)((ESAPID*)(G__getstructoffset()))->getTOFC());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ESAPID_getOneGoodP_3_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,98,(long)((ESAPID*)(G__getstructoffset()))->getOneGoodP());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ESAPID_getOneGoodG_4_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,98,(long)((ESAPID*)(G__getstructoffset()))->getOneGoodG());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ESAPID_getOneGoodE_5_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,98,(long)((ESAPID*)(G__getstructoffset()))->getOneGoodE());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ESAPID_getOneGoodK_6_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,98,(long)((ESAPID*)(G__getstructoffset()))->getOneGoodK());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ESAPID_getOneGoodPi_7_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,98,(long)((ESAPID*)(G__getstructoffset()))->getOneGoodPi());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ESAPID_getOneGoodH_8_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,98,(long)((ESAPID*)(G__getstructoffset()))->getOneGoodH());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ESAPID_setClean_9_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((ESAPID*)(G__getstructoffset()))->setClean((Bool_t)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ESAPID_setXBeam_0_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((ESAPID*)(G__getstructoffset()))->setXBeam((Float_t)G__double(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ESAPID_setYBeam_1_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((ESAPID*)(G__getstructoffset()))->setYBeam((Float_t)G__double(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ESAPID_setNPart_2_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((ESAPID*)(G__getstructoffset()))->setNPart((Int_t)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ESAPID_setID_3_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 2:
      G__setnull(result7);
      ((ESAPID*)(G__getstructoffset()))->setID((UChar_t)G__int(libp->para[0]),(UChar_t)G__int(libp->para[1]));
      break;
   case 1:
      G__setnull(result7);
      ((ESAPID*)(G__getstructoffset()))->setID((UChar_t)G__int(libp->para[0]));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ESAPID_setMom_4_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 2:
      G__setnull(result7);
      ((ESAPID*)(G__getstructoffset()))->setMom((Float_t)G__double(libp->para[0]),(UChar_t)G__int(libp->para[1]));
      break;
   case 1:
      G__setnull(result7);
      ((ESAPID*)(G__getstructoffset()))->setMom((Float_t)G__double(libp->para[0]));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ESAPID_setBeamPbN_5_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 2:
      G__setnull(result7);
      ((ESAPID*)(G__getstructoffset()))->setBeamPbN((Float_t)G__double(libp->para[0]),(Int_t)G__int(libp->para[1]));
      break;
   case 1:
      G__setnull(result7);
      ((ESAPID*)(G__getstructoffset()))->setBeamPbN((Float_t)G__double(libp->para[0]));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ESAPID_setCADC_6_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((ESAPID*)(G__getstructoffset()))->setCADC((Float_t)G__double(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ESAPID_setTOFN_7_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 2:
      G__setnull(result7);
      ((ESAPID*)(G__getstructoffset()))->setTOFN((Float_t)G__double(libp->para[0]),(Int_t)G__int(libp->para[1]));
      break;
   case 1:
      G__setnull(result7);
      ((ESAPID*)(G__getstructoffset()))->setTOFN((Float_t)G__double(libp->para[0]));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ESAPID_setTOFC_8_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((ESAPID*)(G__getstructoffset()))->setTOFC((Float_t)G__double(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ESAPID_setOneGoodP_9_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((ESAPID*)(G__getstructoffset()))->setOneGoodP((Bool_t)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ESAPID_setOneGoodG_0_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((ESAPID*)(G__getstructoffset()))->setOneGoodG((Bool_t)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ESAPID_setOneGoodE_1_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((ESAPID*)(G__getstructoffset()))->setOneGoodE((Bool_t)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ESAPID_setOneGoodK_2_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((ESAPID*)(G__getstructoffset()))->setOneGoodK((Bool_t)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ESAPID_setOneGoodPi_3_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((ESAPID*)(G__getstructoffset()))->setOneGoodPi((Bool_t)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ESAPID_setOneGoodH_4_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((ESAPID*)(G__getstructoffset()))->setOneGoodH((Bool_t)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ESAPID_Class_5_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,85,(long)((ESAPID*)(G__getstructoffset()))->Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ESAPID_Class_Name_6_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,67,(long)((ESAPID*)(G__getstructoffset()))->Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ESAPID_Class_Version_7_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,115,(long)((ESAPID*)(G__getstructoffset()))->Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ESAPID_Dictionary_8_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((ESAPID*)(G__getstructoffset()))->Dictionary();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ESAPID_IsA_9_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,85,(long)((const ESAPID*)(G__getstructoffset()))->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ESAPID_ShowMembers_0_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((ESAPID*)(G__getstructoffset()))->ShowMembers(*(TMemberInspector*)libp->para[0].ref,(char*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ESAPID_Streamer_1_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((ESAPID*)(G__getstructoffset()))->Streamer(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ESAPID_StreamerNVirtual_2_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((ESAPID*)(G__getstructoffset()))->StreamerNVirtual(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ESAPID_DeclFileName_3_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,67,(long)((ESAPID*)(G__getstructoffset()))->DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ESAPID_DeclFileLine_4_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((ESAPID*)(G__getstructoffset()))->DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ESAPID_ImplFileName_5_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,67,(long)((ESAPID*)(G__getstructoffset()))->ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ESAPID_ImplFileLine_6_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((ESAPID*)(G__getstructoffset()))->ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__ESAPID_ESAPID_7_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash)
{
   ESAPID *p;
   p=new ESAPID(*(ESAPID*)G__int(libp->para[0]));
   result7->obj.i = (long)p;
   result7->ref = (long)p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__EventCintLN_ESAPID);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ESAPID G__TESAPID;
static int G__ESAPID_wAESAPID_8_4(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (ESAPID *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         delete (ESAPID *)((G__getstructoffset())+sizeof(ESAPID)*i);
   else  delete (ESAPID *)(G__getstructoffset());
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* L1T */
static int G__L1T_L1T_0_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   L1T *p=NULL;
   if(G__getaryconstruct()) p=new L1T[G__getaryconstruct()];
   else                    p=new L1T;
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__EventCintLN_L1T);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__L1T_L1T_1_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   L1T *p=NULL;
      p = new L1T(
(Int_t)G__int(libp->para[0]),(Int_t)G__int(libp->para[1])
,(Int_t)G__int(libp->para[2]),(Int_t)G__int(libp->para[3])
,(UShort_t)G__int(libp->para[4]),(UChar_t)G__int(libp->para[5])
,(UShort_t)G__int(libp->para[6]));
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__EventCintLN_L1T);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__L1T_Clean_3_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((L1T*)(G__getstructoffset()))->Clean();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__L1T_TrigCount_4_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((L1T*)(G__getstructoffset()))->TrigCount());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__L1T_TrigTimeValue_5_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((L1T*)(G__getstructoffset()))->TrigTimeValue());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__L1T_XCapture_6_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((L1T*)(G__getstructoffset()))->XCapture());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__L1T_YCapture_7_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((L1T*)(G__getstructoffset()))->YCapture());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__L1T_VetoCapture_8_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,114,(long)((L1T*)(G__getstructoffset()))->VetoCapture());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__L1T_DeadTimeReason_9_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,98,(long)((L1T*)(G__getstructoffset()))->DeadTimeReason());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__L1T_DeadTime_0_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,114,(long)((L1T*)(G__getstructoffset()))->DeadTime());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__L1T_setTrigCount_1_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((L1T*)(G__getstructoffset()))->setTrigCount((Int_t)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__L1T_setTrigTimeValue_2_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((L1T*)(G__getstructoffset()))->setTrigTimeValue((Int_t)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__L1T_setXCapture_3_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((L1T*)(G__getstructoffset()))->setXCapture((Int_t)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__L1T_setYCapture_4_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((L1T*)(G__getstructoffset()))->setYCapture((Int_t)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__L1T_setVetoCapture_5_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((L1T*)(G__getstructoffset()))->setVetoCapture((UShort_t)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__L1T_setDeadTimeReason_6_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((L1T*)(G__getstructoffset()))->setDeadTimeReason((UChar_t)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__L1T_setDeadTime_7_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((L1T*)(G__getstructoffset()))->setDeadTime((UShort_t)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__L1T_Class_8_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,85,(long)((L1T*)(G__getstructoffset()))->Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__L1T_Class_Name_9_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,67,(long)((L1T*)(G__getstructoffset()))->Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__L1T_Class_Version_0_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,115,(long)((L1T*)(G__getstructoffset()))->Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__L1T_Dictionary_1_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((L1T*)(G__getstructoffset()))->Dictionary();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__L1T_IsA_2_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,85,(long)((const L1T*)(G__getstructoffset()))->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__L1T_ShowMembers_3_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((L1T*)(G__getstructoffset()))->ShowMembers(*(TMemberInspector*)libp->para[0].ref,(char*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__L1T_Streamer_4_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((L1T*)(G__getstructoffset()))->Streamer(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__L1T_StreamerNVirtual_5_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((L1T*)(G__getstructoffset()))->StreamerNVirtual(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__L1T_DeclFileName_6_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,67,(long)((L1T*)(G__getstructoffset()))->DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__L1T_DeclFileLine_7_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((L1T*)(G__getstructoffset()))->DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__L1T_ImplFileName_8_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,67,(long)((L1T*)(G__getstructoffset()))->ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__L1T_ImplFileLine_9_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((L1T*)(G__getstructoffset()))->ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__L1T_L1T_0_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash)
{
   L1T *p;
   p=new L1T(*(L1T*)G__int(libp->para[0]));
   result7->obj.i = (long)p;
   result7->ref = (long)p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__EventCintLN_L1T);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef L1T G__TL1T;
static int G__L1T_wAL1T_1_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (L1T *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         delete (L1T *)((G__getstructoffset())+sizeof(L1T)*i);
   else  delete (L1T *)(G__getstructoffset());
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TkrHeader */
static int G__TkrHeader_TkrHeader_0_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TkrHeader *p=NULL;
   if(G__getaryconstruct()) p=new TkrHeader[G__getaryconstruct()];
   else                    p=new TkrHeader;
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__EventCintLN_TkrHeader);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TkrHeader_Clean_2_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      G__setnull(result7);
      ((TkrHeader*)(G__getstructoffset()))->Clean((Option_t*)G__int(libp->para[0]));
      break;
   case 0:
      G__setnull(result7);
      ((TkrHeader*)(G__getstructoffset()))->Clean();
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TkrHeader_Class_3_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,85,(long)((TkrHeader*)(G__getstructoffset()))->Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TkrHeader_Class_Name_4_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,67,(long)((TkrHeader*)(G__getstructoffset()))->Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TkrHeader_Class_Version_5_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,115,(long)((TkrHeader*)(G__getstructoffset()))->Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TkrHeader_Dictionary_6_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TkrHeader*)(G__getstructoffset()))->Dictionary();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TkrHeader_IsA_7_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,85,(long)((const TkrHeader*)(G__getstructoffset()))->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TkrHeader_ShowMembers_8_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TkrHeader*)(G__getstructoffset()))->ShowMembers(*(TMemberInspector*)libp->para[0].ref,(char*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TkrHeader_Streamer_9_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TkrHeader*)(G__getstructoffset()))->Streamer(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TkrHeader_StreamerNVirtual_0_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TkrHeader*)(G__getstructoffset()))->StreamerNVirtual(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TkrHeader_DeclFileName_1_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,67,(long)((TkrHeader*)(G__getstructoffset()))->DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TkrHeader_DeclFileLine_2_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((TkrHeader*)(G__getstructoffset()))->DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TkrHeader_ImplFileName_3_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,67,(long)((TkrHeader*)(G__getstructoffset()))->ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TkrHeader_ImplFileLine_4_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((TkrHeader*)(G__getstructoffset()))->ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__TkrHeader_TkrHeader_5_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash)
{
   TkrHeader *p;
   p=new TkrHeader(*(TkrHeader*)G__int(libp->para[0]));
   result7->obj.i = (long)p;
   result7->ref = (long)p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__EventCintLN_TkrHeader);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TkrHeader G__TTkrHeader;
static int G__TkrHeader_wATkrHeader_6_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (TkrHeader *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         delete (TkrHeader *)((G__getstructoffset())+sizeof(TkrHeader)*i);
   else  delete (TkrHeader *)(G__getstructoffset());
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* StripId */
static int G__StripId_StripId_0_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   StripId *p=NULL;
   if(G__getaryconstruct()) p=new StripId[G__getaryconstruct()];
   else                    p=new StripId;
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__EventCintLN_StripId);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StripId_getTag_2_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,114,(long)((const StripId*)(G__getstructoffset()))->getTag());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StripId_getId_3_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,114,(long)((const StripId*)(G__getstructoffset()))->getId());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StripId_getController_4_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,114,(long)((const StripId*)(G__getstructoffset()))->getController());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StripId_getTower_5_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,114,(long)((const StripId*)(G__getstructoffset()))->getTower());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StripId_setTag_6_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,98,(long)((StripId*)(G__getstructoffset()))->setTag((UShort_t)G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StripId_setStrip_7_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,98,(long)((StripId*)(G__getstructoffset()))->setStrip((UShort_t)G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StripId_setController_8_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,98,(long)((StripId*)(G__getstructoffset()))->setController((UShort_t)G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StripId_setTower_9_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,98,(long)((StripId*)(G__getstructoffset()))->setTower((UShort_t)G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StripId_Compare_0_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((StripId*)(G__getstructoffset()))->Compare((TObject*)G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StripId_IsSortable_1_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,98,(long)((const StripId*)(G__getstructoffset()))->IsSortable());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StripId_Class_2_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,85,(long)((StripId*)(G__getstructoffset()))->Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StripId_Class_Name_3_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,67,(long)((StripId*)(G__getstructoffset()))->Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StripId_Class_Version_4_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,115,(long)((StripId*)(G__getstructoffset()))->Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StripId_Dictionary_5_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((StripId*)(G__getstructoffset()))->Dictionary();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StripId_IsA_6_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,85,(long)((const StripId*)(G__getstructoffset()))->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StripId_ShowMembers_7_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((StripId*)(G__getstructoffset()))->ShowMembers(*(TMemberInspector*)libp->para[0].ref,(char*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StripId_Streamer_8_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((StripId*)(G__getstructoffset()))->Streamer(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StripId_StreamerNVirtual_9_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((StripId*)(G__getstructoffset()))->StreamerNVirtual(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StripId_DeclFileName_0_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,67,(long)((StripId*)(G__getstructoffset()))->DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StripId_DeclFileLine_1_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((StripId*)(G__getstructoffset()))->DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StripId_ImplFileName_2_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,67,(long)((StripId*)(G__getstructoffset()))->ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StripId_ImplFileLine_3_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((StripId*)(G__getstructoffset()))->ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__StripId_StripId_4_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash)
{
   StripId *p;
   p=new StripId(*(StripId*)G__int(libp->para[0]));
   result7->obj.i = (long)p;
   result7->ref = (long)p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__EventCintLN_StripId);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef StripId G__TStripId;
static int G__StripId_wAStripId_5_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (StripId *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         delete (StripId *)((G__getstructoffset())+sizeof(StripId)*i);
   else  delete (StripId *)(G__getstructoffset());
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TkrLayer */
static int G__TkrLayer_TkrLayer_0_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TkrLayer *p=NULL;
   if(G__getaryconstruct()) p=new TkrLayer[G__getaryconstruct()];
   else                    p=new TkrLayer;
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__EventCintLN_TkrLayer);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TkrLayer_TkrLayer_1_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TkrLayer *p=NULL;
      p = new TkrLayer((TObjArray*)G__int(libp->para[0]));
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__EventCintLN_TkrLayer);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TkrLayer_Clean_3_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      G__setnull(result7);
      ((TkrLayer*)(G__getstructoffset()))->Clean((Option_t*)G__int(libp->para[0]));
      break;
   case 0:
      G__setnull(result7);
      ((TkrLayer*)(G__getstructoffset()))->Clean();
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TkrLayer_getStrips_4_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,85,(long)((TkrLayer*)(G__getstructoffset()))->getStrips());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TkrLayer_setToT_5_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TkrLayer*)(G__getstructoffset()))->setToT((UInt_t)G__int(libp->para[0]),(UInt_t)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TkrLayer_setErrf_6_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TkrLayer*)(G__getstructoffset()))->setErrf((UInt_t)G__int(libp->para[0]),(UInt_t)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TkrLayer_setLayerNum_7_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TkrLayer*)(G__getstructoffset()))->setLayerNum((UChar_t)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TkrLayer_setXY_8_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TkrLayer*)(G__getstructoffset()))->setXY((TkrLayer::TKRAxes)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TkrLayer_getToT_9_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((TkrLayer*)(G__getstructoffset()))->getToT((UChar_t)G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TkrLayer_getErrf_0_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((TkrLayer*)(G__getstructoffset()))->getErrf((UChar_t)G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TkrLayer_getLayerNum_1_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,98,(long)((const TkrLayer*)(G__getstructoffset()))->getLayerNum());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TkrLayer_getXY_2_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((const TkrLayer*)(G__getstructoffset()))->getXY());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TkrLayer_getNumHits_3_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,104,(long)((TkrLayer*)(G__getstructoffset()))->getNumHits());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TkrLayer_getHit_4_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,85,(long)((TkrLayer*)(G__getstructoffset()))->getHit((int)G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TkrLayer_Compare_5_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((const TkrLayer*)(G__getstructoffset()))->Compare((const TObject*)G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TkrLayer_IsSortable_6_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,98,(long)((const TkrLayer*)(G__getstructoffset()))->IsSortable());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TkrLayer_Class_7_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,85,(long)((TkrLayer*)(G__getstructoffset()))->Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TkrLayer_Class_Name_8_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,67,(long)((TkrLayer*)(G__getstructoffset()))->Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TkrLayer_Class_Version_9_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,115,(long)((TkrLayer*)(G__getstructoffset()))->Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TkrLayer_Dictionary_0_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TkrLayer*)(G__getstructoffset()))->Dictionary();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TkrLayer_IsA_1_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,85,(long)((const TkrLayer*)(G__getstructoffset()))->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TkrLayer_ShowMembers_2_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TkrLayer*)(G__getstructoffset()))->ShowMembers(*(TMemberInspector*)libp->para[0].ref,(char*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TkrLayer_Streamer_3_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TkrLayer*)(G__getstructoffset()))->Streamer(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TkrLayer_StreamerNVirtual_4_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TkrLayer*)(G__getstructoffset()))->StreamerNVirtual(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TkrLayer_DeclFileName_5_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,67,(long)((TkrLayer*)(G__getstructoffset()))->DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TkrLayer_DeclFileLine_6_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((TkrLayer*)(G__getstructoffset()))->DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TkrLayer_ImplFileName_7_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,67,(long)((TkrLayer*)(G__getstructoffset()))->ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TkrLayer_ImplFileLine_8_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((TkrLayer*)(G__getstructoffset()))->ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__TkrLayer_TkrLayer_9_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash)
{
   TkrLayer *p;
   p=new TkrLayer(*(TkrLayer*)G__int(libp->para[0]));
   result7->obj.i = (long)p;
   result7->ref = (long)p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__EventCintLN_TkrLayer);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TkrLayer G__TTkrLayer;
static int G__TkrLayer_wATkrLayer_0_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (TkrLayer *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         delete (TkrLayer *)((G__getstructoffset())+sizeof(TkrLayer)*i);
   else  delete (TkrLayer *)(G__getstructoffset());
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Event */
static int G__Event_Event_0_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   Event *p=NULL;
   if(G__getaryconstruct()) p=new Event[G__getaryconstruct()];
   else                    p=new Event;
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__EventCintLN_Event);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Event_Clean_2_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   switch(libp->paran) {
   case 1:
      G__setnull(result7);
      ((Event*)(G__getstructoffset()))->Clean((Option_t*)G__int(libp->para[0]));
      break;
   case 0:
      G__setnull(result7);
      ((Event*)(G__getstructoffset()))->Clean();
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Event_setEventId_3_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((Event*)(G__getstructoffset()))->setEventId((UInt_t)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Event_getEventId_4_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((Event*)(G__getstructoffset()))->getEventId());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Event_setRunId_5_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((Event*)(G__getstructoffset()))->setRunId((UInt_t)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Event_getRunId_6_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((Event*)(G__getstructoffset()))->getRunId());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Event_getAcdHeader_7_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,85,(long)((Event*)(G__getstructoffset()))->getAcdHeader());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Event_getAcdDigi_8_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,85,(long)((Event*)(G__getstructoffset()))->getAcdDigi());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Event_addAcdTile_9_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,85,(long)((Event*)(G__getstructoffset()))->addAcdTile((UShort_t)G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Event_getAcdTile_0_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,85,(long)((Event*)(G__getstructoffset()))->getAcdTile((UShort_t)G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Event_getXgtDigi_1_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,85,(long)((Event*)(G__getstructoffset()))->getXgtDigi());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Event_addXgt_2_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,85,(long)((Event*)(G__getstructoffset()))->addXgt((UShort_t)G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Event_getXgt_3_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,85,(long)((Event*)(G__getstructoffset()))->getXgt((UShort_t)G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Event_getCalHeader_4_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,85,(long)((Event*)(G__getstructoffset()))->getCalHeader());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Event_getCalDigi_5_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,85,(long)((Event*)(G__getstructoffset()))->getCalDigi());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Event_addCalLog_6_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,85,(long)((Event*)(G__getstructoffset()))->addCalLog());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Event_getTkrHeader_7_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,85,(long)((Event*)(G__getstructoffset()))->getTkrHeader());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Event_getTkrDigi_8_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,85,(long)((Event*)(G__getstructoffset()))->getTkrDigi());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Event_addTkrLayer_9_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((Event*)(G__getstructoffset()))->addTkrLayer((TkrLayer*)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Event_getTkrLayer_0_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,85,(long)((Event*)(G__getstructoffset()))->getTkrLayer((unsigned int)G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Event_getL1T_1_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,85,(long)((Event*)(G__getstructoffset()))->getL1T());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Event_Class_2_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,85,(long)((Event*)(G__getstructoffset()))->Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Event_Class_Name_3_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,67,(long)((Event*)(G__getstructoffset()))->Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Event_Class_Version_4_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,115,(long)((Event*)(G__getstructoffset()))->Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Event_Dictionary_5_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((Event*)(G__getstructoffset()))->Dictionary();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Event_IsA_6_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,85,(long)((const Event*)(G__getstructoffset()))->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Event_ShowMembers_7_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((Event*)(G__getstructoffset()))->ShowMembers(*(TMemberInspector*)libp->para[0].ref,(char*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Event_Streamer_8_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((Event*)(G__getstructoffset()))->Streamer(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Event_StreamerNVirtual_9_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((Event*)(G__getstructoffset()))->StreamerNVirtual(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Event_DeclFileName_0_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,67,(long)((Event*)(G__getstructoffset()))->DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Event_DeclFileLine_1_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((Event*)(G__getstructoffset()))->DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Event_ImplFileName_2_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,67,(long)((Event*)(G__getstructoffset()))->ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Event_ImplFileLine_3_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((Event*)(G__getstructoffset()))->ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__Event_Event_4_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash)
{
   Event *p;
   p=new Event(*(Event*)G__int(libp->para[0]));
   result7->obj.i = (long)p;
   result7->ref = (long)p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__EventCintLN_Event);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef Event G__TEvent;
static int G__Event_wAEvent_5_3(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (Event *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         delete (Event *)((G__getstructoffset())+sizeof(Event)*i);
   else  delete (Event *)(G__getstructoffset());
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Tagger */
static int G__Tagger_Tagger_0_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   Tagger *p=NULL;
   if(G__getaryconstruct()) p=new Tagger[G__getaryconstruct()];
   else                    p=new Tagger;
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__EventCintLN_Tagger);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Tagger_Tagger_1_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   Tagger *p=NULL;
   switch(libp->paran) {
   case 3:
      p = new Tagger(
(ESAPID*)G__int(libp->para[0]),(UInt_t)G__int(libp->para[1])
,(UShort_t)G__int(libp->para[2]));
      break;
   case 2:
      p = new Tagger((ESAPID*)G__int(libp->para[0]),(UInt_t)G__int(libp->para[1]));
      break;
   case 1:
      p = new Tagger((ESAPID*)G__int(libp->para[0]));
      break;
   }
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__EventCintLN_Tagger);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Tagger_getPID_3_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,85,(long)((Tagger*)(G__getstructoffset()))->getPID());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Tagger_getBeamEnergy_4_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letdouble(result7,102,(double)((const Tagger*)(G__getstructoffset()))->getBeamEnergy());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Tagger_getMagCurrent_5_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letdouble(result7,102,(double)((const Tagger*)(G__getstructoffset()))->getMagCurrent());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Tagger_setBeamEnergy_6_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((Tagger*)(G__getstructoffset()))->setBeamEnergy((UInt_t)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Tagger_setMagCurrent_7_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((Tagger*)(G__getstructoffset()))->setMagCurrent((UShort_t)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Tagger_setBeamEnergy_8_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((Tagger*)(G__getstructoffset()))->setBeamEnergy((Float_t)G__double(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Tagger_setMagCurrent_9_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((Tagger*)(G__getstructoffset()))->setMagCurrent((Float_t)G__double(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Tagger_Class_0_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,85,(long)((Tagger*)(G__getstructoffset()))->Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Tagger_Class_Name_1_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,67,(long)((Tagger*)(G__getstructoffset()))->Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Tagger_Class_Version_2_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,115,(long)((Tagger*)(G__getstructoffset()))->Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Tagger_Dictionary_3_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((Tagger*)(G__getstructoffset()))->Dictionary();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Tagger_IsA_4_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,85,(long)((const Tagger*)(G__getstructoffset()))->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Tagger_ShowMembers_5_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((Tagger*)(G__getstructoffset()))->ShowMembers(*(TMemberInspector*)libp->para[0].ref,(char*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Tagger_Streamer_6_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((Tagger*)(G__getstructoffset()))->Streamer(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Tagger_StreamerNVirtual_7_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((Tagger*)(G__getstructoffset()))->StreamerNVirtual(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Tagger_DeclFileName_8_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,67,(long)((Tagger*)(G__getstructoffset()))->DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Tagger_DeclFileLine_9_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((Tagger*)(G__getstructoffset()))->DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Tagger_ImplFileName_0_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,67,(long)((Tagger*)(G__getstructoffset()))->ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Tagger_ImplFileLine_1_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((Tagger*)(G__getstructoffset()))->ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__Tagger_Tagger_2_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash)
{
   Tagger *p;
   p=new Tagger(*(Tagger*)G__int(libp->para[0]));
   result7->obj.i = (long)p;
   result7->ref = (long)p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__EventCintLN_Tagger);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef Tagger G__TTagger;
static int G__Tagger_wATagger_3_2(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (Tagger *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         delete (Tagger *)((G__getstructoffset())+sizeof(Tagger)*i);
   else  delete (Tagger *)(G__getstructoffset());
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/* SubSystemHeader */

/* AcdHeader */

/* AcdId */

/* AcdTile */

/* CalHeader */

/* CalLogId */

/* CalLog */

/* ESAPID */

/* L1T */

/* TkrHeader */

/* StripId */

/* TkrLayer */

/* Event */

/* Tagger */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncEventCint {
 public:
  G__Sizep2memfuncEventCint() {p=&G__Sizep2memfuncEventCint::sizep2memfunc;}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncEventCint::*p)();
};

size_t G__get_sizep2memfuncEventCint()
{
  G__Sizep2memfuncEventCint a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritanceEventCint() {

   /* Setting up class inheritance */
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__EventCintLN_SubSystemHeader))) {
     SubSystemHeader *G__Lderived;
     G__Lderived=(SubSystemHeader*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__EventCintLN_SubSystemHeader),G__get_linked_tagnum(&G__EventCintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__EventCintLN_AcdHeader))) {
     AcdHeader *G__Lderived;
     G__Lderived=(AcdHeader*)0x1000;
     {
       SubSystemHeader *G__Lpbase=(SubSystemHeader*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__EventCintLN_AcdHeader),G__get_linked_tagnum(&G__EventCintLN_SubSystemHeader),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__EventCintLN_AcdHeader),G__get_linked_tagnum(&G__EventCintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__EventCintLN_AcdId))) {
     AcdId *G__Lderived;
     G__Lderived=(AcdId*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__EventCintLN_AcdId),G__get_linked_tagnum(&G__EventCintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__EventCintLN_AcdTile))) {
     AcdTile *G__Lderived;
     G__Lderived=(AcdTile*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__EventCintLN_AcdTile),G__get_linked_tagnum(&G__EventCintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__EventCintLN_CalHeader))) {
     CalHeader *G__Lderived;
     G__Lderived=(CalHeader*)0x1000;
     {
       SubSystemHeader *G__Lpbase=(SubSystemHeader*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__EventCintLN_CalHeader),G__get_linked_tagnum(&G__EventCintLN_SubSystemHeader),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__EventCintLN_CalHeader),G__get_linked_tagnum(&G__EventCintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__EventCintLN_CalLogId))) {
     CalLogId *G__Lderived;
     G__Lderived=(CalLogId*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__EventCintLN_CalLogId),G__get_linked_tagnum(&G__EventCintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__EventCintLN_CalLog))) {
     CalLog *G__Lderived;
     G__Lderived=(CalLog*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__EventCintLN_CalLog),G__get_linked_tagnum(&G__EventCintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__EventCintLN_ESAPID))) {
     ESAPID *G__Lderived;
     G__Lderived=(ESAPID*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__EventCintLN_ESAPID),G__get_linked_tagnum(&G__EventCintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__EventCintLN_L1T))) {
     L1T *G__Lderived;
     G__Lderived=(L1T*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__EventCintLN_L1T),G__get_linked_tagnum(&G__EventCintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__EventCintLN_TkrHeader))) {
     TkrHeader *G__Lderived;
     G__Lderived=(TkrHeader*)0x1000;
     {
       SubSystemHeader *G__Lpbase=(SubSystemHeader*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__EventCintLN_TkrHeader),G__get_linked_tagnum(&G__EventCintLN_SubSystemHeader),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__EventCintLN_TkrHeader),G__get_linked_tagnum(&G__EventCintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__EventCintLN_StripId))) {
     StripId *G__Lderived;
     G__Lderived=(StripId*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__EventCintLN_StripId),G__get_linked_tagnum(&G__EventCintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__EventCintLN_TkrLayer))) {
     TkrLayer *G__Lderived;
     G__Lderived=(TkrLayer*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__EventCintLN_TkrLayer),G__get_linked_tagnum(&G__EventCintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__EventCintLN_Event))) {
     Event *G__Lderived;
     G__Lderived=(Event*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__EventCintLN_Event),G__get_linked_tagnum(&G__EventCintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__EventCintLN_Tagger))) {
     Tagger *G__Lderived;
     G__Lderived=(Tagger*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__EventCintLN_Tagger),G__get_linked_tagnum(&G__EventCintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetableEventCint() {

   /* Setting up typedef entry */
   G__search_typename2("Char_t",99,-1,0,
-1);
   G__setnewtype(-1,"Signed Character 1 byte",0);
   G__search_typename2("UChar_t",98,-1,0,
-1);
   G__setnewtype(-1,"Unsigned Character 1 byte",0);
   G__search_typename2("Short_t",115,-1,0,
-1);
   G__setnewtype(-1,"Signed Short integer 2 bytes",0);
   G__search_typename2("UShort_t",114,-1,0,
-1);
   G__setnewtype(-1,"Unsigned Short integer 2 bytes",0);
   G__search_typename2("Int_t",105,-1,0,
-1);
   G__setnewtype(-1,"Signed integer 4 bytes",0);
   G__search_typename2("UInt_t",104,-1,0,
-1);
   G__setnewtype(-1,"Unsigned integer 4 bytes",0);
   G__search_typename2("Seek_t",105,-1,0,
-1);
   G__setnewtype(-1,"File pointer",0);
   G__search_typename2("Long_t",108,-1,0,
-1);
   G__setnewtype(-1,"Signed long integer 4 bytes",0);
   G__search_typename2("ULong_t",107,-1,0,
-1);
   G__setnewtype(-1,"Unsigned long integer 4 bytes",0);
   G__search_typename2("Float_t",102,-1,0,
-1);
   G__setnewtype(-1,"Float 4 bytes",0);
   G__search_typename2("Double_t",100,-1,0,
-1);
   G__setnewtype(-1,"Float 8 bytes",0);
   G__search_typename2("Text_t",99,-1,0,
-1);
   G__setnewtype(-1,"General string",0);
   G__search_typename2("Bool_t",98,-1,0,
-1);
   G__setnewtype(-1,"Boolean (0=false, 1=true)",0);
   G__search_typename2("Byte_t",98,-1,0,
-1);
   G__setnewtype(-1,"Byte (8 bits)",0);
   G__search_typename2("Version_t",115,-1,0,
-1);
   G__setnewtype(-1,"Class version identifier",0);
   G__search_typename2("Option_t",99,-1,0,
-1);
   G__setnewtype(-1,"Option string",0);
   G__search_typename2("Ssiz_t",105,-1,0,
-1);
   G__setnewtype(-1,"String size",0);
   G__search_typename2("Real_t",102,-1,0,
-1);
   G__setnewtype(-1,"TVector and TMatrix element type",0);
   G__search_typename2("Streamer_t",89,-1,0,
-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("VoidFuncPtr_t",89,-1,0,
-1);
   G__setnewtype(-1,"pointer to void function",0);
   G__search_typename2("FreeHookFun_t",89,-1,0,
-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("ReAllocFun_t",81,-1,0,
-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("ReAllocCFun_t",81,-1,0,
-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("Axis_t",100,-1,0,
-1);
   G__setnewtype(-1,"Axis values type",0);
   G__search_typename2("Stat_t",100,-1,0,
-1);
   G__setnewtype(-1,"Statistics type",0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* SubSystemHeader */
static void G__setup_memvarSubSystemHeader(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__EventCintLN_SubSystemHeader));
   { SubSystemHeader *p; p=(SubSystemHeader*)0x1000; if (p) { }
   G__memvar_setup((void*)NULL,104,0,0,-1,G__defined_typename("UInt_t"),-1,2,"m_eventId=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,104,0,0,-1,G__defined_typename("UInt_t"),-1,2,"m_timerWord=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,104,0,0,-1,G__defined_typename("UInt_t"),-1,2,"m_TREQ_VETO_status=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,104,0,0,-1,G__defined_typename("UInt_t"),-1,2,"m_deadtime_and_cause=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__EventCintLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* AcdHeader */
static void G__setup_memvarAcdHeader(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__EventCintLN_AcdHeader));
   { AcdHeader *p; p=(AcdHeader*)0x1000; if (p) { }
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__EventCintLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* AcdId */
static void G__setup_memvarAcdId(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__EventCintLN_AcdId));
   { AcdId *p; p=(AcdId*)0x1000; if (p) { }
   G__memvar_setup((void*)NULL,104,0,0,-1,G__defined_typename("UInt_t"),-1,4,"m_id=",0,"ACD Tile ID number");
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__EventCintLN_AcdIdcLcLdA),-1,-2,1,"_layermask=2048",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__EventCintLN_AcdIdcLcLdA),-1,-2,1,"_facemask=1792",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__EventCintLN_AcdIdcLcLdA),-1,-2,1,"_rowmask=240",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__EventCintLN_AcdIdcLcLdA),-1,-2,1,"_colmask=15",0,(char*)NULL);
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__EventCintLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* AcdTile */
static void G__setup_memvarAcdTile(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__EventCintLN_AcdTile));
   { AcdTile *p; p=(AcdTile*)0x1000; if (p) { }
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__EventCintLN_AcdTilecLcLdA),-1,-2,1,"ACD_K_PMT=12",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__EventCintLN_AcdTilecLcLdA),-1,-2,1,"ACD_V_PMT=0",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__EventCintLN_AcdTilecLcLdA),-1,-2,1,"ACD_M_PMT=4095",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__EventCintLN_AcdTilecLcLdA),-1,-2,1,"ACD_K_HIT=4",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__EventCintLN_AcdTilecLcLdA),-1,-2,1,"ACD_V_HIT=12",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__EventCintLN_AcdTilecLcLdA),-1,-2,1,"ACD_M_HIT=15",0,(char*)NULL);
   G__memvar_setup((void*)NULL,114,0,0,-1,G__defined_typename("UShort_t"),-1,4,"m_tag=",0,"Packed word containing tile data");
   G__memvar_setup((void*)NULL,117,0,0,G__get_linked_tagnum(&G__EventCintLN_AcdId),-1,-1,4,"m_tileId=",0,"Tile identity info class");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__EventCintLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* CalHeader */
static void G__setup_memvarCalHeader(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__EventCintLN_CalHeader));
   { CalHeader *p; p=(CalHeader*)0x1000; if (p) { }
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__EventCintLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* CalLogId */
static void G__setup_memvarCalLogId(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__EventCintLN_CalLogId));
   { CalLogId *p; p=(CalLogId*)0x1000; if (p) { }
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__EventCintLN_CalLogIdcLcLdA),-1,-2,1,"CAL_K_XY=1",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__EventCintLN_CalLogIdcLcLdA),-1,-2,1,"CAL_V_XY=0",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__EventCintLN_CalLogIdcLcLdA),-1,-2,1,"CAL_M_XY=1",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__EventCintLN_CalLogIdcLcLdA),-1,-2,1,"CAL_K_SEQ=3",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__EventCintLN_CalLogIdcLcLdA),-1,-2,1,"CAL_V_SEQ=1",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__EventCintLN_CalLogIdcLcLdA),-1,-2,1,"CAL_M_SEQ=7",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__EventCintLN_CalLogIdcLcLdA),-1,-2,1,"CAL_K_PIPE=3",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__EventCintLN_CalLogIdcLcLdA),-1,-2,1,"CAL_V_PIPE=4",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__EventCintLN_CalLogIdcLcLdA),-1,-2,1,"CAL_M_PIPE=7",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__EventCintLN_CalLogIdcLcLdA),-1,-2,1,"CAL_K_ID=7",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__EventCintLN_CalLogIdcLcLdA),-1,-2,1,"CAL_V_ID=0",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__EventCintLN_CalLogIdcLcLdA),-1,-2,1,"CAL_M_ID=127",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__EventCintLN_CalLogIdcLcLdA),-1,-2,1,"CAL_K_LAYER=2",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__EventCintLN_CalLogIdcLcLdA),-1,-2,1,"CAL_V_LAYER=7",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__EventCintLN_CalLogIdcLcLdA),-1,-2,1,"CAL_M_LAYER=3",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__EventCintLN_CalLogIdcLcLdA),-1,-2,1,"CAL_K_COLUMN=4",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__EventCintLN_CalLogIdcLcLdA),-1,-2,1,"CAL_V_COLUMN=9",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__EventCintLN_CalLogIdcLcLdA),-1,-2,1,"CAL_M_COLUMN=15",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__EventCintLN_CalLogIdcLcLdA),-1,-2,1,"CAL_K_TOWER=4",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__EventCintLN_CalLogIdcLcLdA),-1,-2,1,"CAL_V_TOWER=13",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__EventCintLN_CalLogIdcLcLdA),-1,-2,1,"CAL_M_TOWER=15",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__EventCintLN_CalLogIdcLcLdA),-1,-2,1,"BOUNDS_COLUMN=9",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__EventCintLN_CalLogIdcLcLdA),-1,-2,1,"BOUNDS_PIPE=4",0,(char*)NULL);
   G__memvar_setup((void*)NULL,104,0,0,-1,G__defined_typename("UInt_t"),-1,4,"m_tag=",0,"Packed word containing log data");
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__EventCintLN_CalLogIdcLcLCALAxes),-1,-2,1,"X=0",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__EventCintLN_CalLogIdcLcLCALAxes),-1,-2,1,"Y=1",0,(char*)NULL);
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__EventCintLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* CalLog */
static void G__setup_memvarCalLog(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__EventCintLN_CalLog));
   { CalLog *p; p=(CalLog*)0x1000; if (p) { }
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__EventCintLN_CalLogcLcLAdcRange),-1,-2,1,"LowEnX4=0",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__EventCintLN_CalLogcLcLAdcRange),-1,-2,1,"LowEnX1=1",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__EventCintLN_CalLogcLcLAdcRange),-1,-2,1,"HiEnX8=2",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__EventCintLN_CalLogcLcLAdcRange),-1,-2,1,"HiEnX1=3",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__EventCintLN_CalLogcLcLLogFace),-1,-2,1,"POS=0",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__EventCintLN_CalLogcLcLLogFace),-1,-2,1,"NEG=1",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__EventCintLN_CalLogcLcLCalTrigMode),-1,-2,1,"BESTRANGE=0",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__EventCintLN_CalLogcLcLCalTrigMode),-1,-2,1,"ALLRANGE=2",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__EventCintLN_CalLogcLcLdA),-1,-2,1,"ADC_K_RS=1",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__EventCintLN_CalLogcLcLdA),-1,-2,1,"ADC_V_RS=0",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__EventCintLN_CalLogcLcLdA),-1,-2,1,"ADC_M_RS=1",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__EventCintLN_CalLogcLcLdA),-1,-2,1,"ADC_K_PIN=1",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__EventCintLN_CalLogcLcLdA),-1,-2,1,"ADC_V_PIN=1",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__EventCintLN_CalLogcLcLdA),-1,-2,1,"ADC_M_PIN=1",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__EventCintLN_CalLogcLcLdA),-1,-2,1,"ADC_K_ID=2",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__EventCintLN_CalLogcLcLdA),-1,-2,1,"ADC_V_ID=2",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__EventCintLN_CalLogcLcLdA),-1,-2,1,"ADC_M_ID=3",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__EventCintLN_CalLogcLcLdA),-1,-2,1,"ADC_K_VAL=12",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__EventCintLN_CalLogcLcLdA),-1,-2,1,"ADC_V_VAL=4",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__EventCintLN_CalLogcLcLdA),-1,-2,1,"ADC_M_VAL=4095",0,(char*)NULL);
   G__memvar_setup((void*)NULL,117,0,0,G__get_linked_tagnum(&G__EventCintLN_CalLogId),-1,-1,4,"m_log=",0,"Log identity info class");
   G__memvar_setup((void*)NULL,114,0,0,-1,G__defined_typename("UShort_t"),-1,4,"m_AdcValues[8]=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,105,0,0,G__get_linked_tagnum(&G__EventCintLN_CalLogcLcLCalTrigMode),G__defined_typename("CalTrigMode"),-2,4,"m_mode=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__EventCintLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* ESAPID */
static void G__setup_memvarESAPID(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__EventCintLN_ESAPID));
   { ESAPID *p; p=(ESAPID*)0x1000; if (p) { }
   G__memvar_setup((void*)NULL,98,0,0,-1,G__defined_typename("Bool_t"),-1,4,"m_Clean=",0,"1 if clean beam (no halo), else 0");
   G__memvar_setup((void*)NULL,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"m_XBeam=",0,"x of primary beam in mm");
   G__memvar_setup((void*)NULL,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"m_YBeam=",0,"y of primary beam in mm");
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"m_NPart=",0,"Number particles found by tagger");
   G__memvar_setup((void*)NULL,98,0,0,-1,G__defined_typename("UChar_t"),-1,4,"m_ID[10]=",0,"id 1=e, 2=gamma, 3=proton, 4=pion, 5=kaon");
   G__memvar_setup((void*)NULL,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"m_Mom[10]=",0,"momentum each particle");
   G__memvar_setup((void*)NULL,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"m_BeamPb[5]=",0,"Energy in GeV for lead glass");
   G__memvar_setup((void*)NULL,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"m_CADC=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"m_TOF[4]=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"m_TOFC=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,98,0,0,-1,G__defined_typename("Bool_t"),-1,4,"m_OneGoodP=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,98,0,0,-1,G__defined_typename("Bool_t"),-1,4,"m_OneGoodG=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,98,0,0,-1,G__defined_typename("Bool_t"),-1,4,"m_OneGoodE=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,98,0,0,-1,G__defined_typename("Bool_t"),-1,4,"m_OneGoodK=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,98,0,0,-1,G__defined_typename("Bool_t"),-1,4,"m_OneGoodPi=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,98,0,0,-1,G__defined_typename("Bool_t"),-1,4,"m_OneGoodH=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__EventCintLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* L1T */
static void G__setup_memvarL1T(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__EventCintLN_L1T));
   { L1T *p; p=(L1T*)0x1000; if (p) { }
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"m_trigCount=",0,"access the 32-bit L1 trigger count    ");
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"m_trigTimeValue=",0,"access the 32-bit the trigger time value (32 bits)    ");
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"m_xCapture=",0,"access the x-trigger REQ capture (32 bits)");
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"m_yCapture=",0,"access the y-trigger capture (32 bits)    ");
   G__memvar_setup((void*)NULL,114,0,0,-1,G__defined_typename("UShort_t"),-1,4,"m_vetoCapture=",0,"access the veto REQ capture    ");
   G__memvar_setup((void*)NULL,98,0,0,-1,G__defined_typename("UChar_t"),-1,4,"m_deadTimeReason=",0,"access the dead-time reason (6 bits)    ");
   G__memvar_setup((void*)NULL,114,0,0,-1,G__defined_typename("UShort_t"),-1,4,"m_deadTime=",0,"access the dead-time count (16-bits)");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__EventCintLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TkrHeader */
static void G__setup_memvarTkrHeader(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__EventCintLN_TkrHeader));
   { TkrHeader *p; p=(TkrHeader*)0x1000; if (p) { }
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__EventCintLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* StripId */
static void G__setup_memvarStripId(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__EventCintLN_StripId));
   { StripId *p; p=(StripId*)0x1000; if (p) { }
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__EventCintLN_StripIdcLcLdA),-1,-2,1,"TKR_K_STRIP=11",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__EventCintLN_StripIdcLcLdA),-1,-2,1,"TKR_V_STRIP=0",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__EventCintLN_StripIdcLcLdA),-1,-2,1,"TKR_M_STRIP=2047",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__EventCintLN_StripIdcLcLdA),-1,-2,1,"TKR_K_CTRL=1",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__EventCintLN_StripIdcLcLdA),-1,-2,1,"TKR_V_CTRL=11",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__EventCintLN_StripIdcLcLdA),-1,-2,1,"TKR_M_CTRL=1",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__EventCintLN_StripIdcLcLdA),-1,-2,1,"TKR_K_TOWER=4",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__EventCintLN_StripIdcLcLdA),-1,-2,1,"TKR_V_TOWER=12",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__EventCintLN_StripIdcLcLdA),-1,-2,1,"TKR_M_TOWER=15",0,(char*)NULL);
   G__memvar_setup((void*)NULL,114,0,0,-1,G__defined_typename("UShort_t"),-1,4,"m_tag=",0,"Packed word containing strip data");
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__EventCintLN_StripIdcLcLdA),-1,-2,1,"STRIP_CTRL_RIGHT=0",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__EventCintLN_StripIdcLcLdA),-1,-2,1,"STRIP_CTRL_LEFT=1",0,(char*)NULL);
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__EventCintLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TkrLayer */
static void G__setup_memvarTkrLayer(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__EventCintLN_TkrLayer));
   { TkrLayer *p; p=(TkrLayer*)0x1000; if (p) { }
   G__memvar_setup((void*)NULL,98,0,0,-1,G__defined_typename("UChar_t"),-1,4,"m_layer=",0,"Tracker layer number");
   G__memvar_setup((void*)NULL,98,0,0,-1,G__defined_typename("UChar_t"),-1,4,"m_xy=",0,"does this layer measure x or y?");
   G__memvar_setup((void*)NULL,104,0,0,-1,G__defined_typename("UInt_t"),-1,4,"m_ToT[2]=",0,"ToT values for each of the 2 readout boards");
   G__memvar_setup((void*)NULL,104,0,0,-1,G__defined_typename("UInt_t"),-1,4,"m_errf[2]=",0,"ERRF values for each of the 2 readout boards");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__EventCintLN_TObjArray),-1,-1,4,"m_strips=",0,"->");
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"m_numStrips=",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__EventCintLN_TkrLayercLcLTKRAxes),-1,-2,1,"X=0",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__EventCintLN_TkrLayercLcLTKRAxes),-1,-2,1,"Y=1",0,(char*)NULL);
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__EventCintLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* Event */
static void G__setup_memvarEvent(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__EventCintLN_Event));
   { Event *p; p=(Event*)0x1000; if (p) { }
   G__memvar_setup((void*)NULL,104,0,0,-1,G__defined_typename("UInt_t"),-1,4,"m_run=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,104,0,0,-1,G__defined_typename("UInt_t"),-1,4,"m_eventId=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,117,0,0,G__get_linked_tagnum(&G__EventCintLN_L1T),-1,-1,4,"m_L1T=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__EventCintLN_TClonesArray),-1,-1,4,"m_AcdDigiVec=",0,"-> ");
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"m_numTiles=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__EventCintLN_TClonesArray),-1,-2,4,"m_staticAcdDigiVec=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,117,0,0,G__get_linked_tagnum(&G__EventCintLN_AcdHeader),-1,-1,4,"m_AcdHeader=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__EventCintLN_TClonesArray),-1,-1,4,"m_XgtDigiVec=",0,"-> ");
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"m_numXgts=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__EventCintLN_TClonesArray),-1,-2,4,"m_staticXgtDigiVec=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__EventCintLN_TClonesArray),-1,-1,4,"m_CalDigiVec=",0,"->");
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"m_numLogs=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__EventCintLN_TClonesArray),-1,-2,4,"m_staticCalDigiVec=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,117,0,0,G__get_linked_tagnum(&G__EventCintLN_CalHeader),-1,-1,4,"m_CalHeader=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__EventCintLN_TObjArray),-1,-2,4,"m_staticTkrDigiVec=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__EventCintLN_TObjArray),-1,-1,4,"m_TkrDigiVec=",0,"-> List of Tracker layers");
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"m_numLayers=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,117,0,0,G__get_linked_tagnum(&G__EventCintLN_TkrHeader),-1,-1,4,"m_TkrHeader=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__EventCintLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* Tagger */
static void G__setup_memvarTagger(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__EventCintLN_Tagger));
   { Tagger *p; p=(Tagger*)0x1000; if (p) { }
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__EventCintLN_ESAPID),-1,-1,4,"m_PID=",0,"Particle ID Info");
   G__memvar_setup((void*)NULL,104,0,0,-1,G__defined_typename("UInt_t"),-1,4,"m_nBeamEnergy=",0,"Beam Energy (MeV)");
   G__memvar_setup((void*)NULL,114,0,0,-1,G__defined_typename("UShort_t"),-1,4,"m_nMagCurrent=",0,"Tagger Magnet Current (deciAmps)");
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__EventCintLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvarEventCint() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncSubSystemHeader(void) {
   /* SubSystemHeader */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__EventCintLN_SubSystemHeader));
   G__memfunc_setup("SubSystemHeader",1528,G__SubSystemHeader_SubSystemHeader_0_0,105,G__get_linked_tagnum(&G__EventCintLN_SubSystemHeader),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Clean",483,G__SubSystemHeader_Clean_2_0,121,-1,-1,0,1,1,1,0,"C - 'Option_t' 0 \"\" option",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("getEventId",1007,G__SubSystemHeader_getEventId_3_0,107,-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("setEventId",1019,G__SubSystemHeader_setEventId_4_0,121,-1,-1,0,1,1,1,0,"h - - 0 - id",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("getTimerWord",1245,G__SubSystemHeader_getTimerWord_5_0,107,-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("setTimerWord",1257,G__SubSystemHeader_setTimerWord_6_0,121,-1,-1,0,1,1,1,0,"h - - 0 - time",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("getStatus",964,G__SubSystemHeader_getStatus_7_0,107,-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("setStatus",976,G__SubSystemHeader_setStatus_8_0,121,-1,-1,0,1,1,1,0,"h - - 0 - stat",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("getDeadTime",1085,G__SubSystemHeader_getDeadTime_9_0,107,-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("getDeadTimeCause",1582,G__SubSystemHeader_getDeadTimeCause_0_1,107,-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("getDeadTimeAndCause",1857,G__SubSystemHeader_getDeadTimeAndCause_1_1,107,-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("setDeadTimeAndCause",1869,G__SubSystemHeader_setDeadTimeAndCause_2_1,121,-1,-1,0,1,1,1,0,"h - - 0 - t",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Class",502,G__SubSystemHeader_Class_3_1,85,G__get_linked_tagnum(&G__EventCintLN_TClass),-1,0,0,3,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Class_Name",982,G__SubSystemHeader_Class_Name_4_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Class_Version",1339,G__SubSystemHeader_Class_Version_5_1,115,-1,G__defined_typename("Version_t"),0,0,3,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Dictionary",1046,G__SubSystemHeader_Dictionary_6_1,121,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("IsA",253,G__SubSystemHeader_IsA_7_1,85,G__get_linked_tagnum(&G__EventCintLN_TClass),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ShowMembers",1132,G__SubSystemHeader_ShowMembers_8_1,121,-1,-1,0,2,1,1,0,
"u 'TMemberInspector' - 1 - insp C - - 0 - parent",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Streamer",835,G__SubSystemHeader_Streamer_9_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("StreamerNVirtual",1656,G__SubSystemHeader_StreamerNVirtual_0_2,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileName",1145,G__SubSystemHeader_DeclFileName_1_2,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileLine",1152,G__SubSystemHeader_DeclFileLine_2_2,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("ImplFileName",1171,G__SubSystemHeader_ImplFileName_3_2,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("ImplFileLine",1178,G__SubSystemHeader_ImplFileLine_4_2,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)NULL,0);
   // automatic copy constructor
   G__memfunc_setup("SubSystemHeader",1528,G__SubSystemHeader_SubSystemHeader_5_2,(int)('i'),G__get_linked_tagnum(&G__EventCintLN_SubSystemHeader),-1,0,1,1,1,0,"u 'SubSystemHeader' - 1 - -",(char*)NULL,(void*)NULL,0);
   // automatic destructor
   G__memfunc_setup("~SubSystemHeader",1654,G__SubSystemHeader_wASubSystemHeader_6_2,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncAcdHeader(void) {
   /* AcdHeader */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__EventCintLN_AcdHeader));
   G__memfunc_setup("AcdHeader",849,G__AcdHeader_AcdHeader_0_0,105,G__get_linked_tagnum(&G__EventCintLN_AcdHeader),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Clean",483,G__AcdHeader_Clean_2_0,121,-1,-1,0,1,1,1,0,"C - 'Option_t' 0 \"\" option",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Class",502,G__AcdHeader_Class_3_0,85,G__get_linked_tagnum(&G__EventCintLN_TClass),-1,0,0,3,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Class_Name",982,G__AcdHeader_Class_Name_4_0,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Class_Version",1339,G__AcdHeader_Class_Version_5_0,115,-1,G__defined_typename("Version_t"),0,0,3,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Dictionary",1046,G__AcdHeader_Dictionary_6_0,121,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("IsA",253,G__AcdHeader_IsA_7_0,85,G__get_linked_tagnum(&G__EventCintLN_TClass),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ShowMembers",1132,G__AcdHeader_ShowMembers_8_0,121,-1,-1,0,2,1,1,0,
"u 'TMemberInspector' - 1 - insp C - - 0 - parent",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Streamer",835,G__AcdHeader_Streamer_9_0,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("StreamerNVirtual",1656,G__AcdHeader_StreamerNVirtual_0_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileName",1145,G__AcdHeader_DeclFileName_1_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileLine",1152,G__AcdHeader_DeclFileLine_2_1,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("ImplFileName",1171,G__AcdHeader_ImplFileName_3_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("ImplFileLine",1178,G__AcdHeader_ImplFileLine_4_1,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)NULL,0);
   // automatic copy constructor
   G__memfunc_setup("AcdHeader",849,G__AcdHeader_AcdHeader_5_1,(int)('i'),G__get_linked_tagnum(&G__EventCintLN_AcdHeader),-1,0,1,1,1,0,"u 'AcdHeader' - 1 - -",(char*)NULL,(void*)NULL,0);
   // automatic destructor
   G__memfunc_setup("~AcdHeader",975,G__AcdHeader_wAAcdHeader_6_1,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncAcdId(void) {
   /* AcdId */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__EventCintLN_AcdId));
   G__memfunc_setup("setLayer",841,(G__InterfaceMethod)NULL,121,-1,-1,0,1,1,4,0,"h - - 0 - val",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("setFace",699,(G__InterfaceMethod)NULL,121,-1,-1,0,1,1,4,0,"h - - 0 - f",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("setRow",644,(G__InterfaceMethod)NULL,121,-1,-1,0,1,1,4,0,"h - - 0 - r",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("setColumn",954,(G__InterfaceMethod)NULL,121,-1,-1,0,1,1,4,0,"h - - 0 - c",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("AcdId",437,G__AcdId_AcdId_4_0,105,G__get_linked_tagnum(&G__EventCintLN_AcdId),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("AcdId",437,G__AcdId_AcdId_5_0,105,G__get_linked_tagnum(&G__EventCintLN_AcdId),-1,0,1,1,1,0,"u 'AcdId' - 11 - id",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("AcdId",437,G__AcdId_AcdId_6_0,105,G__get_linked_tagnum(&G__EventCintLN_AcdId),-1,0,4,1,1,0,
"s - - 0 - l s - - 0 - f "
"s - - 0 - r s - - 0 - c",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("getId",493,G__AcdId_getId_8_0,114,-1,G__defined_typename("UShort_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("isTop",527,G__AcdId_isTop_9_0,105,G__get_linked_tagnum(&G__EventCintLN_bool),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("isSide",609,G__AcdId_isSide_0_1,105,G__get_linked_tagnum(&G__EventCintLN_bool),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("getLayer",829,G__AcdId_getLayer_1_1,115,-1,-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("getFace",687,G__AcdId_getFace_2_1,115,-1,-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("getRow",632,G__AcdId_getRow_3_1,115,-1,-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("getColumn",942,G__AcdId_getColumn_4_1,115,-1,-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("setId",505,G__AcdId_setId_5_1,121,-1,-1,0,1,1,1,0,"r - 'UShort_t' 0 - newVal",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("word",444,(G__InterfaceMethod)NULL,115,-1,-1,0,2,1,4,8,
"s - - 0 - i h - 'UInt_t' 11 - v",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("set_word",871,(G__InterfaceMethod)NULL,121,-1,-1,0,3,1,4,0,
"s - - 0 - i h - 'UInt_t' 1 - v "
"h - 'UInt_t' 11 - s",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Class",502,G__AcdId_Class_8_1,85,G__get_linked_tagnum(&G__EventCintLN_TClass),-1,0,0,3,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Class_Name",982,G__AcdId_Class_Name_9_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Class_Version",1339,G__AcdId_Class_Version_0_2,115,-1,G__defined_typename("Version_t"),0,0,3,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Dictionary",1046,G__AcdId_Dictionary_1_2,121,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("IsA",253,G__AcdId_IsA_2_2,85,G__get_linked_tagnum(&G__EventCintLN_TClass),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ShowMembers",1132,G__AcdId_ShowMembers_3_2,121,-1,-1,0,2,1,1,0,
"u 'TMemberInspector' - 1 - insp C - - 0 - parent",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Streamer",835,G__AcdId_Streamer_4_2,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("StreamerNVirtual",1656,G__AcdId_StreamerNVirtual_5_2,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileName",1145,G__AcdId_DeclFileName_6_2,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileLine",1152,G__AcdId_DeclFileLine_7_2,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("ImplFileName",1171,G__AcdId_ImplFileName_8_2,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("ImplFileLine",1178,G__AcdId_ImplFileLine_9_2,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)NULL,0);
   // automatic destructor
   G__memfunc_setup("~AcdId",563,G__AcdId_wAAcdId_0_3,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncAcdTile(void) {
   /* AcdTile */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__EventCintLN_AcdTile));
   G__memfunc_setup("AcdTile",662,G__AcdTile_AcdTile_0_0,105,G__get_linked_tagnum(&G__EventCintLN_AcdTile),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("AcdTile",662,G__AcdTile_AcdTile_1_0,105,G__get_linked_tagnum(&G__EventCintLN_AcdTile),-1,0,1,1,1,0,"r - 'UShort_t' 0 - id",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("getId",493,G__AcdTile_getId_3_0,85,G__get_linked_tagnum(&G__EventCintLN_AcdId),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("getPulseHeight",1442,G__AcdTile_getPulseHeight_4_0,114,-1,G__defined_typename("UShort_t"),0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("getVeto",734,G__AcdTile_getVeto_5_0,98,-1,G__defined_typename("UChar_t"),0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("setPulseHeight",1454,G__AcdTile_setPulseHeight_6_0,98,-1,G__defined_typename("Bool_t"),0,1,1,1,0,"r - 'UShort_t' 0 - phaVal",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("setVeto",746,G__AcdTile_setVeto_7_0,98,-1,G__defined_typename("Bool_t"),0,1,1,1,0,"b - 'UChar_t' 0 - hitVal",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Compare",711,G__AcdTile_Compare_8_0,105,-1,G__defined_typename("Int_t"),0,1,1,1,8,"U 'TObject' - 10 - obj",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("IsSortable",1016,G__AcdTile_IsSortable_9_0,98,-1,G__defined_typename("Bool_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Class",502,G__AcdTile_Class_0_1,85,G__get_linked_tagnum(&G__EventCintLN_TClass),-1,0,0,3,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Class_Name",982,G__AcdTile_Class_Name_1_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Class_Version",1339,G__AcdTile_Class_Version_2_1,115,-1,G__defined_typename("Version_t"),0,0,3,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Dictionary",1046,G__AcdTile_Dictionary_3_1,121,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("IsA",253,G__AcdTile_IsA_4_1,85,G__get_linked_tagnum(&G__EventCintLN_TClass),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ShowMembers",1132,G__AcdTile_ShowMembers_5_1,121,-1,-1,0,2,1,1,0,
"u 'TMemberInspector' - 1 - insp C - - 0 - parent",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Streamer",835,G__AcdTile_Streamer_6_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("StreamerNVirtual",1656,G__AcdTile_StreamerNVirtual_7_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileName",1145,G__AcdTile_DeclFileName_8_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileLine",1152,G__AcdTile_DeclFileLine_9_1,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("ImplFileName",1171,G__AcdTile_ImplFileName_0_2,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("ImplFileLine",1178,G__AcdTile_ImplFileLine_1_2,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)NULL,0);
   // automatic copy constructor
   G__memfunc_setup("AcdTile",662,G__AcdTile_AcdTile_2_2,(int)('i'),G__get_linked_tagnum(&G__EventCintLN_AcdTile),-1,0,1,1,1,0,"u 'AcdTile' - 1 - -",(char*)NULL,(void*)NULL,0);
   // automatic destructor
   G__memfunc_setup("~AcdTile",788,G__AcdTile_wAAcdTile_3_2,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncCalHeader(void) {
   /* CalHeader */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__EventCintLN_CalHeader));
   G__memfunc_setup("CalHeader",857,G__CalHeader_CalHeader_0_0,105,G__get_linked_tagnum(&G__EventCintLN_CalHeader),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Clean",483,G__CalHeader_Clean_2_0,121,-1,-1,0,1,1,1,0,"C - 'Option_t' 0 \"\" option",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Class",502,G__CalHeader_Class_3_0,85,G__get_linked_tagnum(&G__EventCintLN_TClass),-1,0,0,3,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Class_Name",982,G__CalHeader_Class_Name_4_0,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Class_Version",1339,G__CalHeader_Class_Version_5_0,115,-1,G__defined_typename("Version_t"),0,0,3,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Dictionary",1046,G__CalHeader_Dictionary_6_0,121,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("IsA",253,G__CalHeader_IsA_7_0,85,G__get_linked_tagnum(&G__EventCintLN_TClass),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ShowMembers",1132,G__CalHeader_ShowMembers_8_0,121,-1,-1,0,2,1,1,0,
"u 'TMemberInspector' - 1 - insp C - - 0 - parent",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Streamer",835,G__CalHeader_Streamer_9_0,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("StreamerNVirtual",1656,G__CalHeader_StreamerNVirtual_0_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileName",1145,G__CalHeader_DeclFileName_1_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileLine",1152,G__CalHeader_DeclFileLine_2_1,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("ImplFileName",1171,G__CalHeader_ImplFileName_3_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("ImplFileLine",1178,G__CalHeader_ImplFileLine_4_1,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)NULL,0);
   // automatic copy constructor
   G__memfunc_setup("CalHeader",857,G__CalHeader_CalHeader_5_1,(int)('i'),G__get_linked_tagnum(&G__EventCintLN_CalHeader),-1,0,1,1,1,0,"u 'CalHeader' - 1 - -",(char*)NULL,(void*)NULL,0);
   // automatic destructor
   G__memfunc_setup("~CalHeader",983,G__CalHeader_wACalHeader_6_1,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncCalLogId(void) {
   /* CalLogId */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__EventCintLN_CalLogId));
   G__memfunc_setup("isValidTagStruct",1645,(G__InterfaceMethod)NULL,98,-1,G__defined_typename("Bool_t"),0,1,3,4,0,"u 'CalLogId::TAG_STRUCT' - 0 - ts",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("isValidTagWord",1412,(G__InterfaceMethod)NULL,98,-1,G__defined_typename("Bool_t"),0,1,3,4,0,"h - 'UInt_t' 0 - tagWord",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("isValidColumn",1338,(G__InterfaceMethod)NULL,98,-1,G__defined_typename("Bool_t"),0,1,3,4,0,"h - 'UInt_t' 0 - columnVal",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("isValidPipeLine",1506,(G__InterfaceMethod)NULL,98,-1,G__defined_typename("Bool_t"),0,1,3,4,0,"h - 'UInt_t' 0 - pipeVal",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("getTower",849,(G__InterfaceMethod)NULL,104,-1,G__defined_typename("UInt_t"),0,1,3,4,0,"h - 'UInt_t' 0 - tagWord",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("getColumn",942,(G__InterfaceMethod)NULL,104,-1,G__defined_typename("UInt_t"),0,1,3,4,0,"h - 'UInt_t' 0 - tagWord",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("getLayer",829,(G__InterfaceMethod)NULL,104,-1,G__defined_typename("UInt_t"),0,1,3,4,0,"h - 'UInt_t' 0 - tagWord",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("getId",493,(G__InterfaceMethod)NULL,104,-1,G__defined_typename("UInt_t"),0,1,3,4,0,"h - 'UInt_t' 0 - tagWord",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("getPipeline",1142,(G__InterfaceMethod)NULL,104,-1,G__defined_typename("UInt_t"),0,1,3,4,0,"h - 'UInt_t' 0 - tagWord",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("getSequence",1145,(G__InterfaceMethod)NULL,104,-1,G__defined_typename("UInt_t"),0,1,3,4,0,"h - 'UInt_t' 0 - tagWord",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("getXY",497,(G__InterfaceMethod)NULL,104,-1,G__defined_typename("UInt_t"),0,1,3,4,0,"h - 'UInt_t' 0 - tagWord",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("CalLogId",735,G__CalLogId_CalLogId_1_1,105,G__get_linked_tagnum(&G__EventCintLN_CalLogId),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("CalLogId",735,G__CalLogId_CalLogId_2_1,105,G__get_linked_tagnum(&G__EventCintLN_CalLogId),-1,0,1,1,1,0,"h - 'UInt_t' 0 - tag",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("fillIdFromGeom",1392,G__CalLogId_fillIdFromGeom_4_1,98,-1,G__defined_typename("Bool_t"),0,1,3,1,0,"U 'CalLogId::TAG_STRUCT' - 0 - ts",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("fillGeomFromId",1392,G__CalLogId_fillGeomFromId_5_1,98,-1,G__defined_typename("Bool_t"),0,1,3,1,0,"U 'CalLogId::TAG_STRUCT' - 0 - ts",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("fillTagWord",1119,G__CalLogId_fillTagWord_6_1,104,-1,G__defined_typename("UInt_t"),0,1,3,1,0,"U 'CalLogId::TAG_STRUCT' - 0 - ts",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("fillTagStruct",1352,G__CalLogId_fillTagStruct_7_1,121,-1,-1,0,2,3,1,0,
"h - 'UInt_t' 0 - tagVal U 'CalLogId::TAG_STRUCT' - 0 - ts",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("getTag",604,G__CalLogId_getTag_8_1,104,-1,G__defined_typename("UInt_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("getColumn",942,G__CalLogId_getColumn_9_1,104,-1,G__defined_typename("UInt_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("getLayer",829,G__CalLogId_getLayer_0_2,104,-1,G__defined_typename("UInt_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("getId",493,G__CalLogId_getId_1_2,104,-1,G__defined_typename("UInt_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("getXY",497,G__CalLogId_getXY_2_2,105,G__get_linked_tagnum(&G__EventCintLN_CalLogIdcLcLCALAxes),G__defined_typename("CalLogId::CALAxes"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("getPipeline",1142,G__CalLogId_getPipeline_3_2,104,-1,G__defined_typename("UInt_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("getSequence",1145,G__CalLogId_getSequence_4_2,104,-1,G__defined_typename("UInt_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("setTag",616,G__CalLogId_setTag_5_2,98,-1,G__defined_typename("Bool_t"),0,1,1,1,0,"h - 'UInt_t' 0 - tagVal",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("setTag",616,G__CalLogId_setTag_6_2,98,-1,G__defined_typename("Bool_t"),0,1,1,1,0,"U 'CalLogId::TAG_STRUCT' - 0 - ts",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("setColumn",954,G__CalLogId_setColumn_7_2,98,-1,G__defined_typename("Bool_t"),0,1,1,1,0,"h - 'UInt_t' 0 - columnVal",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("setLayer",841,G__CalLogId_setLayer_8_2,98,-1,G__defined_typename("Bool_t"),0,1,1,1,0,"h - 'UInt_t' 0 - layerVal",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("setXY",509,G__CalLogId_setXY_9_2,98,-1,G__defined_typename("Bool_t"),0,1,1,1,0,"u 'CalLogId::CALAxes' 'CalLogId::CALAxes' 0 - xyVal",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Class",502,G__CalLogId_Class_0_3,85,G__get_linked_tagnum(&G__EventCintLN_TClass),-1,0,0,3,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Class_Name",982,G__CalLogId_Class_Name_1_3,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Class_Version",1339,G__CalLogId_Class_Version_2_3,115,-1,G__defined_typename("Version_t"),0,0,3,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Dictionary",1046,G__CalLogId_Dictionary_3_3,121,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("IsA",253,G__CalLogId_IsA_4_3,85,G__get_linked_tagnum(&G__EventCintLN_TClass),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ShowMembers",1132,G__CalLogId_ShowMembers_5_3,121,-1,-1,0,2,1,1,0,
"u 'TMemberInspector' - 1 - insp C - - 0 - parent",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Streamer",835,G__CalLogId_Streamer_6_3,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("StreamerNVirtual",1656,G__CalLogId_StreamerNVirtual_7_3,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileName",1145,G__CalLogId_DeclFileName_8_3,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileLine",1152,G__CalLogId_DeclFileLine_9_3,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("ImplFileName",1171,G__CalLogId_ImplFileName_0_4,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("ImplFileLine",1178,G__CalLogId_ImplFileLine_1_4,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)NULL,0);
   // automatic copy constructor
   G__memfunc_setup("CalLogId",735,G__CalLogId_CalLogId_2_4,(int)('i'),G__get_linked_tagnum(&G__EventCintLN_CalLogId),-1,0,1,1,1,0,"u 'CalLogId' - 1 - -",(char*)NULL,(void*)NULL,0);
   // automatic destructor
   G__memfunc_setup("~CalLogId",861,G__CalLogId_wACalLogId_3_4,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncCalLog(void) {
   /* CalLog */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__EventCintLN_CalLog));
   G__memfunc_setup("CalLog",562,G__CalLog_CalLog_0_0,105,G__get_linked_tagnum(&G__EventCintLN_CalLog),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Compare",711,G__CalLog_Compare_2_0,105,-1,G__defined_typename("Int_t"),0,1,1,1,8,"U 'TObject' - 10 - obj",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("IsSortable",1016,G__CalLog_IsSortable_3_0,98,-1,G__defined_typename("Bool_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("getAdc",584,(G__InterfaceMethod)NULL,114,-1,G__defined_typename("UShort_t"),0,1,3,4,0,"r - 'UShort_t' 0 - adcWord",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("getAdcId",757,(G__InterfaceMethod)NULL,114,-1,G__defined_typename("UShort_t"),0,1,3,4,0,"r - 'UShort_t' 0 - adcWord",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("getAdcPinId",1052,(G__InterfaceMethod)NULL,114,-1,G__defined_typename("UShort_t"),0,1,3,4,0,"r - 'UShort_t' 0 - adcWord",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("getAdcRangeScale",1565,(G__InterfaceMethod)NULL,114,-1,G__defined_typename("UShort_t"),0,1,3,4,0,"r - 'UShort_t' 0 - adcWord",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("getAdcRange",1077,(G__InterfaceMethod)NULL,114,-1,G__defined_typename("UShort_t"),0,1,3,4,0,"r - 'UShort_t' 0 - adcWord",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("getAdc",584,G__CalLog_getAdc_9_0,114,-1,G__defined_typename("UShort_t"),0,2,1,1,8,
"u 'CalLog::LogFace' 'CalLog::LogFace' 0 - face s - - 0 - index",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("getAdcSelectedRange",1886,G__CalLog_getAdcSelectedRange_0_1,114,-1,G__defined_typename("UShort_t"),0,2,1,1,8,
"u 'CalLog::LogFace' 'CalLog::LogFace' 0 - face u 'CalLog::AdcRange' 'CalLog::AdcRange' 0 LowEnX4 range",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("getRange",813,G__CalLog_getRange_1_1,114,-1,G__defined_typename("UShort_t"),0,2,1,1,8,
"u 'CalLog::LogFace' 'CalLog::LogFace' 0 - face s - - 0 - index",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("getMode",709,G__CalLog_getMode_2_1,105,G__get_linked_tagnum(&G__EventCintLN_CalLogcLcLCalTrigMode),G__defined_typename("CalLog::CalTrigMode"),0,0,1,1,9,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("setAdcValue",1105,G__CalLog_setAdcValue_3_1,98,-1,G__defined_typename("Bool_t"),0,3,1,1,0,
"r - 'UShort_t' 0 - newVal u 'CalLog::LogFace' 'CalLog::LogFace' 0 - face "
"u 'CalLog::AdcRange' 'CalLog::AdcRange' 0 LowEnX4 range",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("setAdcId",769,G__CalLog_setAdcId_4_1,98,-1,G__defined_typename("Bool_t"),0,3,1,1,0,
"r - 'UShort_t' 0 - newVal u 'CalLog::LogFace' 'CalLog::LogFace' 0 - face "
"u 'CalLog::AdcRange' 'CalLog::AdcRange' 0 LowEnX4 range",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("setAdcPinId",1064,G__CalLog_setAdcPinId_5_1,98,-1,G__defined_typename("Bool_t"),0,3,1,1,0,
"r - 'UShort_t' 0 - newVal u 'CalLog::LogFace' 'CalLog::LogFace' 0 - face "
"u 'CalLog::AdcRange' 'CalLog::AdcRange' 0 LowEnX4 range",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("setAdcRangeScale",1577,G__CalLog_setAdcRangeScale_6_1,98,-1,G__defined_typename("Bool_t"),0,3,1,1,0,
"r - 'UShort_t' 0 - newVal u 'CalLog::LogFace' 'CalLog::LogFace' 0 - face "
"u 'CalLog::AdcRange' 'CalLog::AdcRange' 0 LowEnX4 range",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("setAdcWord",1008,G__CalLog_setAdcWord_7_1,121,-1,-1,0,3,1,1,0,
"r - 'UShort_t' 0 - newVal u 'CalLog::LogFace' 'CalLog::LogFace' 0 - face "
"u 'CalLog::AdcRange' 'CalLog::AdcRange' 0 LowEnX4 range",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("setTriggerMode",1445,G__CalLog_setTriggerMode_8_1,121,-1,-1,0,1,1,1,0,"u 'CalLog::CalTrigMode' 'CalLog::CalTrigMode' 0 - val",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("getCalLogId",1055,G__CalLog_getCalLogId_9_1,85,G__get_linked_tagnum(&G__EventCintLN_CalLogId),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Class",502,G__CalLog_Class_0_2,85,G__get_linked_tagnum(&G__EventCintLN_TClass),-1,0,0,3,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Class_Name",982,G__CalLog_Class_Name_1_2,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Class_Version",1339,G__CalLog_Class_Version_2_2,115,-1,G__defined_typename("Version_t"),0,0,3,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Dictionary",1046,G__CalLog_Dictionary_3_2,121,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("IsA",253,G__CalLog_IsA_4_2,85,G__get_linked_tagnum(&G__EventCintLN_TClass),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ShowMembers",1132,G__CalLog_ShowMembers_5_2,121,-1,-1,0,2,1,1,0,
"u 'TMemberInspector' - 1 - insp C - - 0 - parent",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Streamer",835,G__CalLog_Streamer_6_2,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("StreamerNVirtual",1656,G__CalLog_StreamerNVirtual_7_2,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileName",1145,G__CalLog_DeclFileName_8_2,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileLine",1152,G__CalLog_DeclFileLine_9_2,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("ImplFileName",1171,G__CalLog_ImplFileName_0_3,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("ImplFileLine",1178,G__CalLog_ImplFileLine_1_3,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)NULL,0);
   // automatic copy constructor
   G__memfunc_setup("CalLog",562,G__CalLog_CalLog_2_3,(int)('i'),G__get_linked_tagnum(&G__EventCintLN_CalLog),-1,0,1,1,1,0,"u 'CalLog' - 1 - -",(char*)NULL,(void*)NULL,0);
   // automatic destructor
   G__memfunc_setup("~CalLog",688,G__CalLog_wACalLog_3_3,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncESAPID(void) {
   /* ESAPID */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__EventCintLN_ESAPID));
   G__memfunc_setup("Clean",483,(G__InterfaceMethod)NULL,121,-1,-1,0,0,1,4,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("ESAPID",438,G__ESAPID_ESAPID_1_0,105,G__get_linked_tagnum(&G__EventCintLN_ESAPID),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("getClean",803,G__ESAPID_getClean_3_0,98,-1,G__defined_typename("Bool_t"),0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("getXbeam",813,G__ESAPID_getXbeam_4_0,102,-1,G__defined_typename("Float_t"),0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("getYbeam",814,G__ESAPID_getYbeam_5_0,102,-1,G__defined_typename("Float_t"),0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("getNpart",837,G__ESAPID_getNpart_6_0,105,-1,G__defined_typename("Int_t"),0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("getIDN",539,G__ESAPID_getIDN_7_0,105,-1,G__defined_typename("Int_t"),0,1,1,1,0,"i - 'Int_t' 0 - index",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("getMomN",695,G__ESAPID_getMomN_8_0,102,-1,G__defined_typename("Float_t"),0,1,1,1,0,"i - 'Int_t' 0 - index",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("getBeamPbN",949,G__ESAPID_getBeamPbN_9_0,102,-1,G__defined_typename("Float_t"),0,1,1,1,0,"i - 'Int_t' 0 - index",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("getCADC",587,G__ESAPID_getCADC_0_1,102,-1,G__defined_typename("Float_t"),0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("getTOFN",631,G__ESAPID_getTOFN_1_1,102,-1,G__defined_typename("Float_t"),0,1,1,1,0,"i - 'Int_t' 0 - index",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("getTOFC",620,G__ESAPID_getTOFC_2_1,102,-1,G__defined_typename("Float_t"),0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("getOneGoodP",1083,G__ESAPID_getOneGoodP_3_1,98,-1,G__defined_typename("Bool_t"),0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("getOneGoodG",1074,G__ESAPID_getOneGoodG_4_1,98,-1,G__defined_typename("Bool_t"),0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("getOneGoodE",1072,G__ESAPID_getOneGoodE_5_1,98,-1,G__defined_typename("Bool_t"),0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("getOneGoodK",1078,G__ESAPID_getOneGoodK_6_1,98,-1,G__defined_typename("Bool_t"),0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("getOneGoodPi",1188,G__ESAPID_getOneGoodPi_7_1,98,-1,G__defined_typename("Bool_t"),0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("getOneGoodH",1075,G__ESAPID_getOneGoodH_8_1,98,-1,G__defined_typename("Bool_t"),0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("setClean",815,G__ESAPID_setClean_9_1,121,-1,-1,0,1,1,1,0,"b - 'Bool_t' 0 - newVal",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("setXBeam",793,G__ESAPID_setXBeam_0_2,121,-1,-1,0,1,1,1,0,"f - 'Float_t' 0 - newVal",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("setYBeam",794,G__ESAPID_setYBeam_1_2,121,-1,-1,0,1,1,1,0,"f - 'Float_t' 0 - newVal",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("setNPart",817,G__ESAPID_setNPart_2_2,121,-1,-1,0,1,1,1,0,"i - 'Int_t' 0 - newVal",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("setID",473,G__ESAPID_setID_3_2,121,-1,-1,0,2,1,1,0,
"b - 'UChar_t' 0 - newVal b - 'UChar_t' 0 0 index",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("setMom",629,G__ESAPID_setMom_4_2,121,-1,-1,0,2,1,1,0,
"f - 'Float_t' 0 - newVal b - 'UChar_t' 0 0 index",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("setBeamPbN",961,G__ESAPID_setBeamPbN_5_2,121,-1,-1,0,2,1,1,0,
"f - 'Float_t' 0 - newVal i - 'Int_t' 0 0 index",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("setCADC",599,G__ESAPID_setCADC_6_2,121,-1,-1,0,1,1,1,0,"f - 'Float_t' 0 - newVal",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("setTOFN",643,G__ESAPID_setTOFN_7_2,121,-1,-1,0,2,1,1,0,
"f - 'Float_t' 0 - newVal i - 'Int_t' 0 0 index",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("setTOFC",632,G__ESAPID_setTOFC_8_2,121,-1,-1,0,1,1,1,0,"f - 'Float_t' 0 - newVal",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("setOneGoodP",1095,G__ESAPID_setOneGoodP_9_2,121,-1,-1,0,1,1,1,0,"b - 'Bool_t' 0 - newVal",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("setOneGoodG",1086,G__ESAPID_setOneGoodG_0_3,121,-1,-1,0,1,1,1,0,"b - 'Bool_t' 0 - newVal",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("setOneGoodE",1084,G__ESAPID_setOneGoodE_1_3,121,-1,-1,0,1,1,1,0,"b - 'Bool_t' 0 - newVal",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("setOneGoodK",1090,G__ESAPID_setOneGoodK_2_3,121,-1,-1,0,1,1,1,0,"b - 'Bool_t' 0 - newVal",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("setOneGoodPi",1200,G__ESAPID_setOneGoodPi_3_3,121,-1,-1,0,1,1,1,0,"b - 'Bool_t' 0 - newVal",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("setOneGoodH",1087,G__ESAPID_setOneGoodH_4_3,121,-1,-1,0,1,1,1,0,"b - 'Bool_t' 0 - newVal",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Class",502,G__ESAPID_Class_5_3,85,G__get_linked_tagnum(&G__EventCintLN_TClass),-1,0,0,3,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Class_Name",982,G__ESAPID_Class_Name_6_3,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Class_Version",1339,G__ESAPID_Class_Version_7_3,115,-1,G__defined_typename("Version_t"),0,0,3,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Dictionary",1046,G__ESAPID_Dictionary_8_3,121,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("IsA",253,G__ESAPID_IsA_9_3,85,G__get_linked_tagnum(&G__EventCintLN_TClass),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ShowMembers",1132,G__ESAPID_ShowMembers_0_4,121,-1,-1,0,2,1,1,0,
"u 'TMemberInspector' - 1 - insp C - - 0 - parent",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Streamer",835,G__ESAPID_Streamer_1_4,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("StreamerNVirtual",1656,G__ESAPID_StreamerNVirtual_2_4,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileName",1145,G__ESAPID_DeclFileName_3_4,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileLine",1152,G__ESAPID_DeclFileLine_4_4,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("ImplFileName",1171,G__ESAPID_ImplFileName_5_4,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("ImplFileLine",1178,G__ESAPID_ImplFileLine_6_4,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)NULL,0);
   // automatic copy constructor
   G__memfunc_setup("ESAPID",438,G__ESAPID_ESAPID_7_4,(int)('i'),G__get_linked_tagnum(&G__EventCintLN_ESAPID),-1,0,1,1,1,0,"u 'ESAPID' - 1 - -",(char*)NULL,(void*)NULL,0);
   // automatic destructor
   G__memfunc_setup("~ESAPID",564,G__ESAPID_wAESAPID_8_4,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncL1T(void) {
   /* L1T */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__EventCintLN_L1T));
   G__memfunc_setup("L1T",209,G__L1T_L1T_0_0,105,G__get_linked_tagnum(&G__EventCintLN_L1T),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("L1T",209,G__L1T_L1T_1_0,105,G__get_linked_tagnum(&G__EventCintLN_L1T),-1,0,7,1,1,0,
"i - 'Int_t' 0 - trigCount i - 'Int_t' 0 - trigTimeValue "
"i - 'Int_t' 0 - xCapture i - 'Int_t' 0 - yCapture "
"r - 'UShort_t' 0 - vetoCapture b - 'UChar_t' 0 - deadTimeReason "
"r - 'UShort_t' 0 - deadTime",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Clean",483,G__L1T_Clean_3_0,121,-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TrigCount",927,G__L1T_TrigCount_4_0,105,-1,G__defined_typename("Int_t"),0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TrigTimeValue",1314,G__L1T_TrigTimeValue_5_0,105,-1,G__defined_typename("Int_t"),0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("XCapture",812,G__L1T_XCapture_6_0,105,-1,G__defined_typename("Int_t"),0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("YCapture",813,G__L1T_YCapture_7_0,105,-1,G__defined_typename("Int_t"),0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("VetoCapture",1138,G__L1T_VetoCapture_8_0,114,-1,G__defined_typename("UShort_t"),0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeadTimeReason",1381,G__L1T_DeadTimeReason_9_0,98,-1,G__defined_typename("UChar_t"),0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeadTime",765,G__L1T_DeadTime_0_1,114,-1,G__defined_typename("UShort_t"),0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("setTrigCount",1259,G__L1T_setTrigCount_1_1,121,-1,-1,0,1,1,1,0,"i - 'Int_t' 0 - newVal",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("setTrigTimeValue",1646,G__L1T_setTrigTimeValue_2_1,121,-1,-1,0,1,1,1,0,"i - 'Int_t' 0 - newVal",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("setXCapture",1144,G__L1T_setXCapture_3_1,121,-1,-1,0,1,1,1,0,"i - 'Int_t' 0 - newVal",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("setYCapture",1145,G__L1T_setYCapture_4_1,121,-1,-1,0,1,1,1,0,"i - 'Int_t' 0 - newVal",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("setVetoCapture",1470,G__L1T_setVetoCapture_5_1,121,-1,-1,0,1,1,1,0,"r - 'UShort_t' 0 - newVal",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("setDeadTimeReason",1713,G__L1T_setDeadTimeReason_6_1,121,-1,-1,0,1,1,1,0,"b - 'UChar_t' 0 - newVal",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("setDeadTime",1097,G__L1T_setDeadTime_7_1,121,-1,-1,0,1,1,1,0,"r - 'UShort_t' 0 - newVal",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Class",502,G__L1T_Class_8_1,85,G__get_linked_tagnum(&G__EventCintLN_TClass),-1,0,0,3,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Class_Name",982,G__L1T_Class_Name_9_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Class_Version",1339,G__L1T_Class_Version_0_2,115,-1,G__defined_typename("Version_t"),0,0,3,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Dictionary",1046,G__L1T_Dictionary_1_2,121,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("IsA",253,G__L1T_IsA_2_2,85,G__get_linked_tagnum(&G__EventCintLN_TClass),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ShowMembers",1132,G__L1T_ShowMembers_3_2,121,-1,-1,0,2,1,1,0,
"u 'TMemberInspector' - 1 - insp C - - 0 - parent",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Streamer",835,G__L1T_Streamer_4_2,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("StreamerNVirtual",1656,G__L1T_StreamerNVirtual_5_2,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileName",1145,G__L1T_DeclFileName_6_2,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileLine",1152,G__L1T_DeclFileLine_7_2,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("ImplFileName",1171,G__L1T_ImplFileName_8_2,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("ImplFileLine",1178,G__L1T_ImplFileLine_9_2,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)NULL,0);
   // automatic copy constructor
   G__memfunc_setup("L1T",209,G__L1T_L1T_0_3,(int)('i'),G__get_linked_tagnum(&G__EventCintLN_L1T),-1,0,1,1,1,0,"u 'L1T' - 1 - -",(char*)NULL,(void*)NULL,0);
   // automatic destructor
   G__memfunc_setup("~L1T",335,G__L1T_wAL1T_1_3,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTkrHeader(void) {
   /* TkrHeader */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__EventCintLN_TkrHeader));
   G__memfunc_setup("TkrHeader",890,G__TkrHeader_TkrHeader_0_0,105,G__get_linked_tagnum(&G__EventCintLN_TkrHeader),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Clean",483,G__TkrHeader_Clean_2_0,121,-1,-1,0,1,1,1,0,"C - 'Option_t' 0 \"\" option",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Class",502,G__TkrHeader_Class_3_0,85,G__get_linked_tagnum(&G__EventCintLN_TClass),-1,0,0,3,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Class_Name",982,G__TkrHeader_Class_Name_4_0,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Class_Version",1339,G__TkrHeader_Class_Version_5_0,115,-1,G__defined_typename("Version_t"),0,0,3,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Dictionary",1046,G__TkrHeader_Dictionary_6_0,121,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("IsA",253,G__TkrHeader_IsA_7_0,85,G__get_linked_tagnum(&G__EventCintLN_TClass),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ShowMembers",1132,G__TkrHeader_ShowMembers_8_0,121,-1,-1,0,2,1,1,0,
"u 'TMemberInspector' - 1 - insp C - - 0 - parent",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Streamer",835,G__TkrHeader_Streamer_9_0,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("StreamerNVirtual",1656,G__TkrHeader_StreamerNVirtual_0_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileName",1145,G__TkrHeader_DeclFileName_1_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileLine",1152,G__TkrHeader_DeclFileLine_2_1,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("ImplFileName",1171,G__TkrHeader_ImplFileName_3_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("ImplFileLine",1178,G__TkrHeader_ImplFileLine_4_1,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)NULL,0);
   // automatic copy constructor
   G__memfunc_setup("TkrHeader",890,G__TkrHeader_TkrHeader_5_1,(int)('i'),G__get_linked_tagnum(&G__EventCintLN_TkrHeader),-1,0,1,1,1,0,"u 'TkrHeader' - 1 - -",(char*)NULL,(void*)NULL,0);
   // automatic destructor
   G__memfunc_setup("~TkrHeader",1016,G__TkrHeader_wATkrHeader_6_1,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncStripId(void) {
   /* StripId */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__EventCintLN_StripId));
   G__memfunc_setup("StripId",703,G__StripId_StripId_0_0,105,G__get_linked_tagnum(&G__EventCintLN_StripId),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("getTag",604,G__StripId_getTag_2_0,114,-1,G__defined_typename("UShort_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("getId",493,G__StripId_getId_3_0,114,-1,G__defined_typename("UShort_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("getController",1380,G__StripId_getController_4_0,114,-1,G__defined_typename("UShort_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("getTower",849,G__StripId_getTower_5_0,114,-1,G__defined_typename("UShort_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("setTag",616,G__StripId_setTag_6_0,98,-1,G__defined_typename("Bool_t"),0,1,1,1,0,"r - 'UShort_t' 0 - tagVal",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("setStrip",862,G__StripId_setStrip_7_0,98,-1,G__defined_typename("Bool_t"),0,1,1,1,0,"r - 'UShort_t' 0 - stripVal",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("setController",1392,G__StripId_setController_8_0,98,-1,G__defined_typename("Bool_t"),0,1,1,1,0,"r - 'UShort_t' 0 - ctrlVal",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("setTower",861,G__StripId_setTower_9_0,98,-1,G__defined_typename("Bool_t"),0,1,1,1,0,"r - 'UShort_t' 0 - towerVal",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Compare",711,G__StripId_Compare_0_1,105,-1,G__defined_typename("Int_t"),0,1,1,1,0,"U 'TObject' - 0 - obj",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("IsSortable",1016,G__StripId_IsSortable_1_1,98,-1,G__defined_typename("Bool_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Class",502,G__StripId_Class_2_1,85,G__get_linked_tagnum(&G__EventCintLN_TClass),-1,0,0,3,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Class_Name",982,G__StripId_Class_Name_3_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Class_Version",1339,G__StripId_Class_Version_4_1,115,-1,G__defined_typename("Version_t"),0,0,3,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Dictionary",1046,G__StripId_Dictionary_5_1,121,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("IsA",253,G__StripId_IsA_6_1,85,G__get_linked_tagnum(&G__EventCintLN_TClass),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ShowMembers",1132,G__StripId_ShowMembers_7_1,121,-1,-1,0,2,1,1,0,
"u 'TMemberInspector' - 1 - insp C - - 0 - parent",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Streamer",835,G__StripId_Streamer_8_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("StreamerNVirtual",1656,G__StripId_StreamerNVirtual_9_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileName",1145,G__StripId_DeclFileName_0_2,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileLine",1152,G__StripId_DeclFileLine_1_2,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("ImplFileName",1171,G__StripId_ImplFileName_2_2,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("ImplFileLine",1178,G__StripId_ImplFileLine_3_2,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)NULL,0);
   // automatic copy constructor
   G__memfunc_setup("StripId",703,G__StripId_StripId_4_2,(int)('i'),G__get_linked_tagnum(&G__EventCintLN_StripId),-1,0,1,1,1,0,"u 'StripId' - 1 - -",(char*)NULL,(void*)NULL,0);
   // automatic destructor
   G__memfunc_setup("~StripId",829,G__StripId_wAStripId_5_2,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTkrLayer(void) {
   /* TkrLayer */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__EventCintLN_TkrLayer));
   G__memfunc_setup("TkrLayer",814,G__TkrLayer_TkrLayer_0_0,105,G__get_linked_tagnum(&G__EventCintLN_TkrLayer),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("TkrLayer",814,G__TkrLayer_TkrLayer_1_0,105,G__get_linked_tagnum(&G__EventCintLN_TkrLayer),-1,0,1,1,1,0,"U 'TObjArray' - 0 - strips",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Clean",483,G__TkrLayer_Clean_3_0,121,-1,-1,0,1,1,1,0,"C - 'Option_t' 0 \"\" option",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("getStrips",965,G__TkrLayer_getStrips_4_0,85,G__get_linked_tagnum(&G__EventCintLN_TObjArray),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("setToT",611,G__TkrLayer_setToT_5_0,121,-1,-1,0,2,1,1,0,
"h - 'UInt_t' 0 - right h - 'UInt_t' 0 - left",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("setErrf",731,G__TkrLayer_setErrf_6_0,121,-1,-1,0,2,1,1,0,
"h - 'UInt_t' 0 - right h - 'UInt_t' 0 - left",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("setLayerNum",1145,G__TkrLayer_setLayerNum_7_0,121,-1,-1,0,1,1,1,0,"b - 'UChar_t' 0 - layerVal",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("setXY",509,G__TkrLayer_setXY_8_0,121,-1,-1,0,1,1,1,0,"u 'TkrLayer::TKRAxes' 'TkrLayer::TKRAxes' 0 - xyVal",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("getToT",599,G__TkrLayer_getToT_9_0,105,-1,G__defined_typename("Int_t"),0,1,1,1,0,"b - 'UChar_t' 0 - ctrlNum",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("getErrf",719,G__TkrLayer_getErrf_0_1,105,-1,G__defined_typename("Int_t"),0,1,1,1,0,"b - 'UChar_t' 0 - ctrlNum",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("getLayerNum",1133,G__TkrLayer_getLayerNum_1_1,98,-1,G__defined_typename("UChar_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("getXY",497,G__TkrLayer_getXY_2_1,105,G__get_linked_tagnum(&G__EventCintLN_TkrLayercLcLTKRAxes),G__defined_typename("TkrLayer::TKRAxes"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("getNumHits",1032,G__TkrLayer_getNumHits_3_1,104,-1,G__defined_typename("UInt_t"),0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("getHit",613,G__TkrLayer_getHit_4_1,85,G__get_linked_tagnum(&G__EventCintLN_StripId),-1,0,1,1,1,0,"i - - 0 - i",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Compare",711,G__TkrLayer_Compare_5_1,105,-1,G__defined_typename("Int_t"),0,1,1,1,8,"U 'TObject' - 10 - obj",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("IsSortable",1016,G__TkrLayer_IsSortable_6_1,98,-1,G__defined_typename("Bool_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Class",502,G__TkrLayer_Class_7_1,85,G__get_linked_tagnum(&G__EventCintLN_TClass),-1,0,0,3,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Class_Name",982,G__TkrLayer_Class_Name_8_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Class_Version",1339,G__TkrLayer_Class_Version_9_1,115,-1,G__defined_typename("Version_t"),0,0,3,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Dictionary",1046,G__TkrLayer_Dictionary_0_2,121,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("IsA",253,G__TkrLayer_IsA_1_2,85,G__get_linked_tagnum(&G__EventCintLN_TClass),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ShowMembers",1132,G__TkrLayer_ShowMembers_2_2,121,-1,-1,0,2,1,1,0,
"u 'TMemberInspector' - 1 - insp C - - 0 - parent",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Streamer",835,G__TkrLayer_Streamer_3_2,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("StreamerNVirtual",1656,G__TkrLayer_StreamerNVirtual_4_2,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileName",1145,G__TkrLayer_DeclFileName_5_2,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileLine",1152,G__TkrLayer_DeclFileLine_6_2,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("ImplFileName",1171,G__TkrLayer_ImplFileName_7_2,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("ImplFileLine",1178,G__TkrLayer_ImplFileLine_8_2,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)NULL,0);
   // automatic copy constructor
   G__memfunc_setup("TkrLayer",814,G__TkrLayer_TkrLayer_9_2,(int)('i'),G__get_linked_tagnum(&G__EventCintLN_TkrLayer),-1,0,1,1,1,0,"u 'TkrLayer' - 1 - -",(char*)NULL,(void*)NULL,0);
   // automatic destructor
   G__memfunc_setup("~TkrLayer",940,G__TkrLayer_wATkrLayer_0_3,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncEvent(void) {
   /* Event */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__EventCintLN_Event));
   G__memfunc_setup("Event",514,G__Event_Event_0_0,105,G__get_linked_tagnum(&G__EventCintLN_Event),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Clean",483,G__Event_Clean_2_0,121,-1,-1,0,1,1,1,0,"C - 'Option_t' 0 \"\" option",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("setEventId",1019,G__Event_setEventId_3_0,121,-1,-1,0,1,1,1,0,"h - 'UInt_t' 0 - id",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("getEventId",1007,G__Event_getEventId_4_0,105,-1,G__defined_typename("Int_t"),0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("setRunId",814,G__Event_setRunId_5_0,121,-1,-1,0,1,1,1,0,"h - 'UInt_t' 0 - run",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("getRunId",802,G__Event_getRunId_6_0,105,-1,G__defined_typename("Int_t"),0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("getAcdHeader",1169,G__Event_getAcdHeader_7_0,85,G__get_linked_tagnum(&G__EventCintLN_AcdHeader),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("getAcdDigi",965,G__Event_getAcdDigi_8_0,85,G__get_linked_tagnum(&G__EventCintLN_TClonesArray),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("addAcdTile",959,G__Event_addAcdTile_9_0,85,G__get_linked_tagnum(&G__EventCintLN_AcdTile),-1,0,1,1,1,0,"r - 'UShort_t' 0 - id",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("getAcdTile",982,G__Event_getAcdTile_0_1,85,G__get_linked_tagnum(&G__EventCintLN_AcdTile),-1,0,1,1,1,1,"r - 'UShort_t' 0 - id",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("getXgtDigi",1008,G__Event_getXgtDigi_1_1,85,G__get_linked_tagnum(&G__EventCintLN_TClonesArray),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("addXgt",604,G__Event_addXgt_2_1,85,G__get_linked_tagnum(&G__EventCintLN_AcdTile),-1,0,1,1,1,0,"r - 'UShort_t' 0 - id",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("getXgt",627,G__Event_getXgt_3_1,85,G__get_linked_tagnum(&G__EventCintLN_AcdTile),-1,0,1,1,1,1,"r - 'UShort_t' 0 - id",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("getCalHeader",1177,G__Event_getCalHeader_4_1,85,G__get_linked_tagnum(&G__EventCintLN_CalHeader),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("getCalDigi",973,G__Event_getCalDigi_5_1,85,G__get_linked_tagnum(&G__EventCintLN_TClonesArray),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("addCalLog",859,G__Event_addCalLog_6_1,85,G__get_linked_tagnum(&G__EventCintLN_CalLog),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("getTkrHeader",1210,G__Event_getTkrHeader_7_1,85,G__get_linked_tagnum(&G__EventCintLN_TkrHeader),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("getTkrDigi",1006,G__Event_getTkrDigi_8_1,85,G__get_linked_tagnum(&G__EventCintLN_TObjArray),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("addTkrLayer",1111,G__Event_addTkrLayer_9_1,121,-1,-1,0,1,1,1,0,"U 'TkrLayer' - 0 - layer",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("getTkrLayer",1134,G__Event_getTkrLayer_0_2,85,G__get_linked_tagnum(&G__EventCintLN_TkrLayer),-1,0,1,1,1,1,"h - - 0 - layerNum",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("getL1T",529,G__Event_getL1T_1_2,85,G__get_linked_tagnum(&G__EventCintLN_L1T),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Class",502,G__Event_Class_2_2,85,G__get_linked_tagnum(&G__EventCintLN_TClass),-1,0,0,3,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Class_Name",982,G__Event_Class_Name_3_2,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Class_Version",1339,G__Event_Class_Version_4_2,115,-1,G__defined_typename("Version_t"),0,0,3,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Dictionary",1046,G__Event_Dictionary_5_2,121,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("IsA",253,G__Event_IsA_6_2,85,G__get_linked_tagnum(&G__EventCintLN_TClass),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ShowMembers",1132,G__Event_ShowMembers_7_2,121,-1,-1,0,2,1,1,0,
"u 'TMemberInspector' - 1 - insp C - - 0 - parent",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Streamer",835,G__Event_Streamer_8_2,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("StreamerNVirtual",1656,G__Event_StreamerNVirtual_9_2,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileName",1145,G__Event_DeclFileName_0_3,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileLine",1152,G__Event_DeclFileLine_1_3,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("ImplFileName",1171,G__Event_ImplFileName_2_3,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("ImplFileLine",1178,G__Event_ImplFileLine_3_3,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)NULL,0);
   // automatic copy constructor
   G__memfunc_setup("Event",514,G__Event_Event_4_3,(int)('i'),G__get_linked_tagnum(&G__EventCintLN_Event),-1,0,1,1,1,0,"u 'Event' - 1 - -",(char*)NULL,(void*)NULL,0);
   // automatic destructor
   G__memfunc_setup("~Event",640,G__Event_wAEvent_5_3,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTagger(void) {
   /* Tagger */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__EventCintLN_Tagger));
   G__memfunc_setup("Tagger",602,G__Tagger_Tagger_0_0,105,G__get_linked_tagnum(&G__EventCintLN_Tagger),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Tagger",602,G__Tagger_Tagger_1_0,105,G__get_linked_tagnum(&G__EventCintLN_Tagger),-1,0,3,1,1,0,
"U 'ESAPID' - 0 - pid h - 'UInt_t' 0 1 eBeam "
"r - 'UShort_t' 0 0 iMag",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("getPID",541,G__Tagger_getPID_3_0,85,G__get_linked_tagnum(&G__EventCintLN_ESAPID),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("getBeamEnergy",1311,G__Tagger_getBeamEnergy_4_0,102,-1,G__defined_typename("Float_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("getMagCurrent",1336,G__Tagger_getMagCurrent_5_0,102,-1,G__defined_typename("Float_t"),0,0,1,1,8,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("setBeamEnergy",1323,G__Tagger_setBeamEnergy_6_0,121,-1,-1,0,1,1,1,0,"h - 'UInt_t' 0 - eBeam","(MeV)",(void*)NULL,0);
   G__memfunc_setup("setMagCurrent",1348,G__Tagger_setMagCurrent_7_0,121,-1,-1,0,1,1,1,0,"r - 'UShort_t' 0 - iMag","(deciAmps)",(void*)NULL,0);
   G__memfunc_setup("setBeamEnergy",1323,G__Tagger_setBeamEnergy_8_0,121,-1,-1,0,1,1,1,0,"f - 'Float_t' 0 - eBeam","(GeV)",(void*)NULL,0);
   G__memfunc_setup("setMagCurrent",1348,G__Tagger_setMagCurrent_9_0,121,-1,-1,0,1,1,1,0,"f - 'Float_t' 0 - iMag","(Amps)",(void*)NULL,0);
   G__memfunc_setup("Class",502,G__Tagger_Class_0_1,85,G__get_linked_tagnum(&G__EventCintLN_TClass),-1,0,0,3,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Class_Name",982,G__Tagger_Class_Name_1_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Class_Version",1339,G__Tagger_Class_Version_2_1,115,-1,G__defined_typename("Version_t"),0,0,3,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Dictionary",1046,G__Tagger_Dictionary_3_1,121,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("IsA",253,G__Tagger_IsA_4_1,85,G__get_linked_tagnum(&G__EventCintLN_TClass),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ShowMembers",1132,G__Tagger_ShowMembers_5_1,121,-1,-1,0,2,1,1,0,
"u 'TMemberInspector' - 1 - insp C - - 0 - parent",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Streamer",835,G__Tagger_Streamer_6_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("StreamerNVirtual",1656,G__Tagger_StreamerNVirtual_7_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileName",1145,G__Tagger_DeclFileName_8_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileLine",1152,G__Tagger_DeclFileLine_9_1,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("ImplFileName",1171,G__Tagger_ImplFileName_0_2,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("ImplFileLine",1178,G__Tagger_ImplFileLine_1_2,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)NULL,0);
   // automatic copy constructor
   G__memfunc_setup("Tagger",602,G__Tagger_Tagger_2_2,(int)('i'),G__get_linked_tagnum(&G__EventCintLN_Tagger),-1,0,1,1,1,0,"u 'Tagger' - 1 - -",(char*)NULL,(void*)NULL,0);
   // automatic destructor
   G__memfunc_setup("~Tagger",728,G__Tagger_wATagger_3_2,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncEventCint() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
extern "C" void G__cpp_setup_globalEventCint() {

   /* Setting up global variables */
   G__resetplocal();


   G__resetglobalenv();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
extern "C" void G__cpp_setup_funcEventCint() {
   G__lastifuncposition();


   G__resetifuncposition();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__EventCintLN_bool = { "bool" , 101 , -1 };
G__linked_taginfo G__EventCintLN_TClass = { "TClass" , 99 , -1 };
G__linked_taginfo G__EventCintLN_TObjArray = { "TObjArray" , 99 , -1 };
G__linked_taginfo G__EventCintLN_TObject = { "TObject" , 99 , -1 };
G__linked_taginfo G__EventCintLN_SubSystemHeader = { "SubSystemHeader" , 99 , -1 };
G__linked_taginfo G__EventCintLN_AcdHeader = { "AcdHeader" , 99 , -1 };
G__linked_taginfo G__EventCintLN_AcdId = { "AcdId" , 99 , -1 };
G__linked_taginfo G__EventCintLN_AcdIdcLcLdA = { "AcdId::$" , 101 , -1 };
G__linked_taginfo G__EventCintLN_AcdTile = { "AcdTile" , 99 , -1 };
G__linked_taginfo G__EventCintLN_AcdTilecLcLdA = { "AcdTile::$" , 101 , -1 };
G__linked_taginfo G__EventCintLN_CalHeader = { "CalHeader" , 99 , -1 };
G__linked_taginfo G__EventCintLN_CalLogId = { "CalLogId" , 99 , -1 };
G__linked_taginfo G__EventCintLN_CalLogIdcLcLdA = { "CalLogId::$" , 101 , -1 };
G__linked_taginfo G__EventCintLN_CalLogIdcLcLCALAxes = { "CalLogId::CALAxes" , 101 , -1 };
G__linked_taginfo G__EventCintLN_CalLog = { "CalLog" , 99 , -1 };
G__linked_taginfo G__EventCintLN_CalLogcLcLAdcRange = { "CalLog::AdcRange" , 101 , -1 };
G__linked_taginfo G__EventCintLN_CalLogcLcLLogFace = { "CalLog::LogFace" , 101 , -1 };
G__linked_taginfo G__EventCintLN_CalLogcLcLCalTrigMode = { "CalLog::CalTrigMode" , 101 , -1 };
G__linked_taginfo G__EventCintLN_CalLogcLcLdA = { "CalLog::$" , 101 , -1 };
G__linked_taginfo G__EventCintLN_ESAPID = { "ESAPID" , 99 , -1 };
G__linked_taginfo G__EventCintLN_L1T = { "L1T" , 99 , -1 };
G__linked_taginfo G__EventCintLN_TClonesArray = { "TClonesArray" , 99 , -1 };
G__linked_taginfo G__EventCintLN_TkrHeader = { "TkrHeader" , 99 , -1 };
G__linked_taginfo G__EventCintLN_StripId = { "StripId" , 99 , -1 };
G__linked_taginfo G__EventCintLN_StripIdcLcLdA = { "StripId::$" , 101 , -1 };
G__linked_taginfo G__EventCintLN_TkrLayer = { "TkrLayer" , 99 , -1 };
G__linked_taginfo G__EventCintLN_TkrLayercLcLTKRAxes = { "TkrLayer::TKRAxes" , 101 , -1 };
G__linked_taginfo G__EventCintLN_Event = { "Event" , 99 , -1 };
G__linked_taginfo G__EventCintLN_Tagger = { "Tagger" , 99 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtableEventCint() {
  G__EventCintLN_bool.tagnum = -1 ;
  G__EventCintLN_TClass.tagnum = -1 ;
  G__EventCintLN_TObjArray.tagnum = -1 ;
  G__EventCintLN_TObject.tagnum = -1 ;
  G__EventCintLN_SubSystemHeader.tagnum = -1 ;
  G__EventCintLN_AcdHeader.tagnum = -1 ;
  G__EventCintLN_AcdId.tagnum = -1 ;
  G__EventCintLN_AcdIdcLcLdA.tagnum = -1 ;
  G__EventCintLN_AcdTile.tagnum = -1 ;
  G__EventCintLN_AcdTilecLcLdA.tagnum = -1 ;
  G__EventCintLN_CalHeader.tagnum = -1 ;
  G__EventCintLN_CalLogId.tagnum = -1 ;
  G__EventCintLN_CalLogIdcLcLdA.tagnum = -1 ;
  G__EventCintLN_CalLogIdcLcLCALAxes.tagnum = -1 ;
  G__EventCintLN_CalLog.tagnum = -1 ;
  G__EventCintLN_CalLogcLcLAdcRange.tagnum = -1 ;
  G__EventCintLN_CalLogcLcLLogFace.tagnum = -1 ;
  G__EventCintLN_CalLogcLcLCalTrigMode.tagnum = -1 ;
  G__EventCintLN_CalLogcLcLdA.tagnum = -1 ;
  G__EventCintLN_ESAPID.tagnum = -1 ;
  G__EventCintLN_L1T.tagnum = -1 ;
  G__EventCintLN_TClonesArray.tagnum = -1 ;
  G__EventCintLN_TkrHeader.tagnum = -1 ;
  G__EventCintLN_StripId.tagnum = -1 ;
  G__EventCintLN_StripIdcLcLdA.tagnum = -1 ;
  G__EventCintLN_TkrLayer.tagnum = -1 ;
  G__EventCintLN_TkrLayercLcLTKRAxes.tagnum = -1 ;
  G__EventCintLN_Event.tagnum = -1 ;
  G__EventCintLN_Tagger.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtableEventCint() {

   /* Setting up class,struct,union tag entry */
   G__tagtable_setup(G__get_linked_tagnum(&G__EventCintLN_SubSystemHeader),sizeof(SubSystemHeader),-1,29952,(char*)NULL,G__setup_memvarSubSystemHeader,G__setup_memfuncSubSystemHeader);
   G__tagtable_setup(G__get_linked_tagnum(&G__EventCintLN_AcdHeader),sizeof(AcdHeader),-1,29952,(char*)NULL,G__setup_memvarAcdHeader,G__setup_memfuncAcdHeader);
   G__tagtable_setup(G__get_linked_tagnum(&G__EventCintLN_AcdId),sizeof(AcdId),-1,30464,"ACD Tile identification information",G__setup_memvarAcdId,G__setup_memfuncAcdId);
   G__tagtable_setup(G__get_linked_tagnum(&G__EventCintLN_AcdTile),sizeof(AcdTile),-1,29952,"Digitization for a single ACD Tile",G__setup_memvarAcdTile,G__setup_memfuncAcdTile);
   G__tagtable_setup(G__get_linked_tagnum(&G__EventCintLN_CalHeader),sizeof(CalHeader),-1,29952,(char*)NULL,G__setup_memvarCalHeader,G__setup_memfuncCalHeader);
   G__tagtable_setup(G__get_linked_tagnum(&G__EventCintLN_CalLogId),sizeof(CalLogId),-1,29952,"CsI log identification and readout information",G__setup_memvarCalLogId,G__setup_memfuncCalLogId);
   G__tagtable_setup(G__get_linked_tagnum(&G__EventCintLN_CalLog),sizeof(CalLog),-1,29952,"Digitization for a single Cal Log",G__setup_memvarCalLog,G__setup_memfuncCalLog);
   G__tagtable_setup(G__get_linked_tagnum(&G__EventCintLN_ESAPID),sizeof(ESAPID),-1,29952,"ESA Particle Identification information",G__setup_memvarESAPID,G__setup_memfuncESAPID);
   G__tagtable_setup(G__get_linked_tagnum(&G__EventCintLN_L1T),sizeof(L1T),-1,29952,"Level 1 Trigger information",G__setup_memvarL1T,G__setup_memfuncL1T);
   G__tagtable_setup(G__get_linked_tagnum(&G__EventCintLN_TkrHeader),sizeof(TkrHeader),-1,29952,(char*)NULL,G__setup_memvarTkrHeader,G__setup_memfuncTkrHeader);
   G__tagtable_setup(G__get_linked_tagnum(&G__EventCintLN_StripId),sizeof(StripId),-1,29952,"Information on a single Si Strip",G__setup_memvarStripId,G__setup_memfuncStripId);
   G__tagtable_setup(G__get_linked_tagnum(&G__EventCintLN_TkrLayer),sizeof(TkrLayer),-1,29952,"Information on a single tracker layer	   ",G__setup_memvarTkrLayer,G__setup_memfuncTkrLayer);
   G__tagtable_setup(G__get_linked_tagnum(&G__EventCintLN_Event),sizeof(Event),-1,29952,"Storage for Raw(Digi) event and subsystem data",G__setup_memvarEvent,G__setup_memfuncEvent);
   G__tagtable_setup(G__get_linked_tagnum(&G__EventCintLN_Tagger),sizeof(Tagger),-1,29952,"Tagger information",G__setup_memvarTagger,G__setup_memfuncTagger);
}
extern "C" void G__cpp_setupEventCint(void) {
  G__check_setup_version(30051472,"G__cpp_setupEventCint()");
  G__set_cpp_environmentEventCint();
  G__cpp_setup_tagtableEventCint();

  G__cpp_setup_inheritanceEventCint();

  G__cpp_setup_typetableEventCint();

  G__cpp_setup_memvarEventCint();

  G__cpp_setup_memfuncEventCint();
  G__cpp_setup_globalEventCint();
  G__cpp_setup_funcEventCint();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncEventCint();
  return;
}
class G__cpp_setup_initEventCint {
  public:
    G__cpp_setup_initEventCint() { G__add_setup_func("EventCint",(G__incsetup)(&G__cpp_setupEventCint)); }
   ~G__cpp_setup_initEventCint() { G__remove_setup_func("EventCint"); }
};
G__cpp_setup_initEventCint G__cpp_setup_initializerEventCint;

